<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on ZsmHub - Blog</title>
    <link>https://zsmhub.github.io/post/</link>
    <description>Recent content in Posts on ZsmHub - Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>ZsmHub</copyright>
    <lastBuildDate>Thu, 06 Oct 2022 08:54:37 +0800</lastBuildDate><atom:link href="https://zsmhub.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>围棋GO</title>
      <link>https://zsmhub.github.io/post/%E7%94%9F%E6%B4%BB%E7%AC%94%E8%AE%B0/%E5%9B%B4%E6%A3%8Bgo/</link>
      <pubDate>Thu, 06 Oct 2022 08:54:37 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E7%94%9F%E6%B4%BB%E7%AC%94%E8%AE%B0/%E5%9B%B4%E6%A3%8Bgo/</guid>
      <description>围棋的英文名有三种：中国读 Weiqi，西方读 Go，韩国读 baduk。 围棋对局一般分为三个阶段：布局、中盘、收官。收官阶段也称为官子阶段。然而</description>
    </item>
    
    <item>
      <title>Go之GORM</title>
      <link>https://zsmhub.github.io/post/golang/go%E4%B9%8Bgorm/</link>
      <pubDate>Fri, 02 Sep 2022 17:14:30 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/golang/go%E4%B9%8Bgorm/</guid>
      <description>GORM Attrs(User{Age: 20}).FirstOrCreate(&amp;amp;user): 如果记录未找到，将使用参数创建 struct 和记录. Assign(User{Age: 30}).FirstOrCreate(&amp;amp;user): 不管记录是否找到，都将参数赋值给 struct 并保存至数据库. 数据类型建议 时间戳字段：建议使用 int6</description>
    </item>
    
    <item>
      <title>脚本跑数</title>
      <link>https://zsmhub.github.io/post/%E5%AE%9E%E6%88%98%E6%A1%88%E4%BE%8B/%E8%84%9A%E6%9C%AC%E8%B7%91%E6%95%B0/</link>
      <pubDate>Wed, 31 Aug 2022 09:08:49 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E5%AE%9E%E6%88%98%E6%A1%88%E4%BE%8B/%E8%84%9A%E6%9C%AC%E8%B7%91%E6%95%B0/</guid>
      <description>MySQL数据表更新数据 对于100万条记录、200M占用空间的数据表，执行全量update语句，速度很快，1分钟可执行完毕 对于100万条记录</description>
    </item>
    
    <item>
      <title>你为什么会感觉人生无聊？</title>
      <link>https://zsmhub.github.io/post/%E7%94%9F%E6%B4%BB%E7%AC%94%E8%AE%B0/%E4%BD%A0%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E6%84%9F%E8%A7%89%E4%BA%BA%E7%94%9F%E6%97%A0%E8%81%8A/</link>
      <pubDate>Wed, 10 Aug 2022 15:06:44 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E7%94%9F%E6%B4%BB%E7%AC%94%E8%AE%B0/%E4%BD%A0%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E6%84%9F%E8%A7%89%E4%BA%BA%E7%94%9F%E6%97%A0%E8%81%8A/</guid>
      <description>＂我为什么要像现在这样活着？＂ ＂我应该怎么样活着？＂ ＂好无聊，我能干什么？＂ ＂为什么没有能够勾起我兴趣的东西？＂ &amp;hellip;&amp;helli</description>
    </item>
    
    <item>
      <title>AppleScript</title>
      <link>https://zsmhub.github.io/post/macos/applescript/</link>
      <pubDate>Mon, 18 Jul 2022 17:00:40 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/macos/applescript/</guid>
      <description>什么是 AppleScript 点击查看官方文档 脚本语言有很多种，你可能听说过的 Shell Script、Python 和 JavaScript，都是其中的代表。而 AppleScript 则是 macOS 下提供</description>
    </item>
    
    <item>
      <title>讲话技巧</title>
      <link>https://zsmhub.github.io/post/%E7%94%9F%E6%B4%BB%E7%AC%94%E8%AE%B0/%E8%AE%B2%E8%AF%9D%E6%8A%80%E5%B7%A7/</link>
      <pubDate>Mon, 11 Jul 2022 15:14:43 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E7%94%9F%E6%B4%BB%E7%AC%94%E8%AE%B0/%E8%AE%B2%E8%AF%9D%E6%8A%80%E5%B7%A7/</guid>
      <description>善用不同连接词 善用不同连接词，才不会一直「然后、然后」下去⋯⋯ 说话时使用的连接词非常重要，如果只有不断的重复然后……然后……，会让整段表达死</description>
    </item>
    
    <item>
      <title>Go语言环境安装及如何使用Go多版本（Mac）</title>
      <link>https://zsmhub.github.io/post/golang/go%E8%AF%AD%E8%A8%80%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E5%8F%8A%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8go%E5%A4%9A%E7%89%88%E6%9C%ACmac/</link>
      <pubDate>Wed, 06 Jul 2022 14:41:22 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/golang/go%E8%AF%AD%E8%A8%80%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E5%8F%8A%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8go%E5%A4%9A%E7%89%88%E6%9C%ACmac/</guid>
      <description>go环境的卸载 pkg方式安装go？ 删除/usr/local下的go目录即可 1 sudo rm -rf /usr/local/go brew方式安装go? 1 brew uninstall go@1.14 使用brew安装 1 2 3 4 5</description>
    </item>
    
    <item>
      <title>网约车和顺风车</title>
      <link>https://zsmhub.github.io/post/%E7%94%9F%E6%B4%BB%E7%AC%94%E8%AE%B0/%E7%BD%91%E7%BA%A6%E8%BD%A6%E5%92%8C%E9%A1%BA%E9%A3%8E%E8%BD%A6/</link>
      <pubDate>Fri, 24 Jun 2022 11:03:11 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E7%94%9F%E6%B4%BB%E7%AC%94%E8%AE%B0/%E7%BD%91%E7%BA%A6%E8%BD%A6%E5%92%8C%E9%A1%BA%E9%A3%8E%E8%BD%A6/</guid>
      <description>网约车 从事合规的网约车业务必须办理网约车相关证件，个人办理的话主要是网约车驾驶员和网约车运输证。 网约车驾驶员证 这个驾驶员证其实就是我们所说的</description>
    </item>
    
    <item>
      <title>Go之项目程序结构</title>
      <link>https://zsmhub.github.io/post/golang/go%E4%B9%8B%E9%A1%B9%E7%9B%AE%E7%A8%8B%E5%BA%8F%E7%BB%93%E6%9E%84/</link>
      <pubDate>Tue, 14 Jun 2022 10:27:18 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/golang/go%E4%B9%8B%E9%A1%B9%E7%9B%AE%E7%A8%8B%E5%BA%8F%E7%BB%93%E6%9E%84/</guid>
      <description>项目程序结构 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 . ├── Dockerfile // 镜像配置 ├── docker-compose-local.yaml // dock</description>
    </item>
    
    <item>
      <title>Go之分布式</title>
      <link>https://zsmhub.github.io/post/golang/go%E4%B9%8B%E5%88%86%E5%B8%83%E5%BC%8F/</link>
      <pubDate>Tue, 24 May 2022 10:51:38 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/golang/go%E4%B9%8B%E5%88%86%E5%B8%83%E5%BC%8F/</guid>
      <description>在使用分布式并发原语时，除了需要考虑可用性和数据一致性，还需要考虑分布式设计带来的性能损耗问题。所以，在使用之前，你一定要做好性能的评估。 分</description>
    </item>
    
    <item>
      <title>Session和Cookie</title>
      <link>https://zsmhub.github.io/post/%E5%90%8E%E7%AB%AF/session%E5%92%8Ccookie/</link>
      <pubDate>Thu, 19 May 2022 10:49:38 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E5%90%8E%E7%AB%AF/session%E5%92%8Ccookie/</guid>
      <description>session与cookie属于一种会话控制技术，常用在身份识别，登录验证，数据传输等。 cookie，是在本地计算机保存一些用户操作的历史信</description>
    </item>
    
    <item>
      <title>依赖注入</title>
      <link>https://zsmhub.github.io/post/golang/%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5/</link>
      <pubDate>Thu, 05 May 2022 18:03:19 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/golang/%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5/</guid>
      <description>go.uber.org/dig 依赖注入，抽象接口，依赖于抽象接口，而不依赖于具体的对象，实现接口的相互依赖。（可解决同级包的循环引用问题） 引用包：go.uber.org</description>
    </item>
    
    <item>
      <title>工具类方法汇总</title>
      <link>https://zsmhub.github.io/post/%E5%AE%9E%E6%88%98%E6%A1%88%E4%BE%8B/tool/</link>
      <pubDate>Thu, 07 Apr 2022 15:34:51 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E5%AE%9E%E6%88%98%E6%A1%88%E4%BE%8B/tool/</guid>
      <description>循环定时功能 业务场景：如某个提醒功能，可以设定重复定时，设定周一某个时间点循环提醒。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28</description>
    </item>
    
    <item>
      <title>Go 性能分析工具</title>
      <link>https://zsmhub.github.io/post/golang/go%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/</link>
      <pubDate>Tue, 29 Mar 2022 14:26:32 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/golang/go%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/</guid>
      <description>一、PProf 简介 pprof 是用于可视化和分析性能分析数据的工具。 Golang是一个非常注重性能的语言，因此语言的内置库里就自带了性能分析库ppro</description>
    </item>
    
    <item>
      <title>简单的excel导入导出</title>
      <link>https://zsmhub.github.io/post/golang/%E7%AE%80%E5%8D%95%E7%9A%84excel%E5%AF%BC%E5%85%A5%E5%AF%BC%E5%87%BA/</link>
      <pubDate>Wed, 16 Mar 2022 15:41:12 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/golang/%E7%AE%80%E5%8D%95%E7%9A%84excel%E5%AF%BC%E5%85%A5%E5%AF%BC%E5%87%BA/</guid>
      <description>excel导入导出代码 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59</description>
    </item>
    
    <item>
      <title>线上事故记录</title>
      <link>https://zsmhub.github.io/post/%E5%AE%9E%E6%88%98%E6%A1%88%E4%BE%8B/%E7%BA%BF%E4%B8%8A%E4%BA%8B%E6%95%85%E8%AE%B0%E5%BD%95/</link>
      <pubDate>Tue, 15 Mar 2022 10:57:57 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E5%AE%9E%E6%88%98%E6%A1%88%E4%BE%8B/%E7%BA%BF%E4%B8%8A%E4%BA%8B%E6%95%85%E8%AE%B0%E5%BD%95/</guid>
      <description>一、数据库宕机 事故时间：2020-08-25 事故描述： 大量慢查询 阿里云数据库RDS，一主三从一备胎主库（共 5 个数据库），主从读写分离失效，大</description>
    </item>
    
    <item>
      <title>多系统对接-签名校验案例(GO)</title>
      <link>https://zsmhub.github.io/post/%E5%AE%9E%E6%88%98%E6%A1%88%E4%BE%8B/%E7%AD%BE%E5%90%8D%E6%A0%A1%E9%AA%8C%E6%A1%88%E4%BE%8Bgo/</link>
      <pubDate>Tue, 15 Mar 2022 10:39:08 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E5%AE%9E%E6%88%98%E6%A1%88%E4%BE%8B/%E7%AD%BE%E5%90%8D%E6%A0%A1%E9%AA%8C%E6%A1%88%E4%BE%8Bgo/</guid>
      <description>接口通讯规范 签名规则： 1 2 3 4 5 6 7 8 // 签名有效期暂定为 600 秒 var platform = &amp;#34;baidu&amp;#34; // 对接平台，正式测试环境保持一致 var secret = &amp;#34;test_123456&amp;#34; // 测试环境密钥，生产环境密钥私聊</description>
    </item>
    
    <item>
      <title>企业微信自建应用代开发</title>
      <link>https://zsmhub.github.io/post/%E5%AE%9E%E6%88%98%E6%A1%88%E4%BE%8B/%E4%BC%81%E4%B8%9A%E5%BE%AE%E4%BF%A1%E8%87%AA%E5%BB%BA%E5%BA%94%E7%94%A8%E4%BB%A3%E5%BC%80%E5%8F%91/</link>
      <pubDate>Mon, 14 Mar 2022 09:41:17 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E5%AE%9E%E6%88%98%E6%A1%88%E4%BE%8B/%E4%BC%81%E4%B8%9A%E5%BE%AE%E4%BF%A1%E8%87%AA%E5%BB%BA%E5%BA%94%E7%94%A8%E4%BB%A3%E5%BC%80%E5%8F%91/</guid>
      <description>企业微信开发汇总 关于企业微信的所有，如开源企业微信sdk 企业微信开发自建应用代开发篇 企业微信开发第三方应用开发篇 企业微信开发自建内部应用开发</description>
    </item>
    
    <item>
      <title>稳定排序和不稳定排序</title>
      <link>https://zsmhub.github.io/post/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%92%8C%E7%AE%97%E6%B3%95/%E7%A8%B3%E5%AE%9A%E6%8E%92%E5%BA%8F%E5%92%8C%E4%B8%8D%E7%A8%B3%E5%AE%9A%E6%8E%92%E5%BA%8F/</link>
      <pubDate>Thu, 10 Mar 2022 11:21:07 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%92%8C%E7%AE%97%E6%B3%95/%E7%A8%B3%E5%AE%9A%E6%8E%92%E5%BA%8F%E5%92%8C%E4%B8%8D%E7%A8%B3%E5%AE%9A%E6%8E%92%E5%BA%8F/</guid>
      <description>首先，排序算法的稳定性大家应该都知道，通俗地讲就是能保证排序前2个相等的数其在序列的前后位置顺序和排序后它们两个的前后位置顺序相同。在简单形</description>
    </item>
    
    <item>
      <title>Git分支管理</title>
      <link>https://zsmhub.github.io/post/%E5%90%8E%E7%AB%AF/git%E5%88%86%E6%94%AF%E7%AE%A1%E7%90%86/</link>
      <pubDate>Mon, 07 Mar 2022 18:00:53 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E5%90%8E%E7%AB%AF/git%E5%88%86%E6%94%AF%E7%AE%A1%E7%90%86/</guid>
      <description>GIT分支管理及发版合并流程 主要分支：master(线上分支), uat(承接分支), release(预发布分支), develop(开发分支)</description>
    </item>
    
    <item>
      <title>企业微信第三方应用开发</title>
      <link>https://zsmhub.github.io/post/%E5%AE%9E%E6%88%98%E6%A1%88%E4%BE%8B/%E4%BC%81%E4%B8%9A%E5%BE%AE%E4%BF%A1%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91/</link>
      <pubDate>Fri, 24 Sep 2021 16:46:43 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E5%AE%9E%E6%88%98%E6%A1%88%E4%BE%8B/%E4%BC%81%E4%B8%9A%E5%BE%AE%E4%BF%A1%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91/</guid>
      <description>术语介绍 corpid 每个服务商同时也是一个企业微信的企业，都有唯一的corpid。获取此信息可在服务商管理后台“应用开发”－“通用开发参数”可查看 provider_secret 作</description>
    </item>
    
    <item>
      <title>饮茶之道</title>
      <link>https://zsmhub.github.io/post/%E7%94%9F%E6%B4%BB%E7%AC%94%E8%AE%B0/%E9%A5%AE%E8%8C%B6%E4%B9%8B%E9%81%93/</link>
      <pubDate>Wed, 15 Sep 2021 08:55:04 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E7%94%9F%E6%B4%BB%E7%AC%94%E8%AE%B0/%E9%A5%AE%E8%8C%B6%E4%B9%8B%E9%81%93/</guid>
      <description>茶分六色 按茶叶的发酵程度排序：绿茶，黄茶，白茶，青茶，红茶，黑茶 绿茶——抗氧化、降火 绿茶是这六种茶中唯一的不发酵茶，保留了较多的天然物质；而</description>
    </item>
    
    <item>
      <title>寻医问药</title>
      <link>https://zsmhub.github.io/post/%E7%94%9F%E6%B4%BB%E7%AC%94%E8%AE%B0/%E5%AF%BB%E5%8C%BB%E9%97%AE%E8%8D%AF/</link>
      <pubDate>Mon, 13 Sep 2021 07:55:16 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E7%94%9F%E6%B4%BB%E7%AC%94%E8%AE%B0/%E5%AF%BB%E5%8C%BB%E9%97%AE%E8%8D%AF/</guid>
      <description>儿童常用药 感冒常用药：小儿氨酚黄颗粒、氨酚伪麻那敏分散片、安儿宁颗粒(风热感冒)、银胡感冒散(风热感冒) 皮肤过敏、儿童蚊虫叮咬: 马来酸氯苯那</description>
    </item>
    
    <item>
      <title>Nginx</title>
      <link>https://zsmhub.github.io/post/%E6%9C%8D%E5%8A%A1%E5%99%A8/nginx/</link>
      <pubDate>Wed, 01 Sep 2021 10:35:12 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E6%9C%8D%E5%8A%A1%E5%99%A8/nginx/</guid>
      <description>nginx 示例 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 server { server_name xxx.com; rewrite ^ https://xxx.com$request_uri? permanent; access_log off; } server { listen 443 ssl; ssl_certificate /etc/nginx/ssl/xxx.crt; ssl_certificate_key /etc/nginx/ssl/xxx.key; charset utf-8; server_name xxx.com; location / { proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header Host $http_host; proxy_set_header X-NginX-Proxy true; proxy_pass http://127.0.0.1:8080; } access_log /home/wwwlogs/xxx-api.log</description>
    </item>
    
    <item>
      <title>直播开发</title>
      <link>https://zsmhub.github.io/post/%E5%90%8E%E7%AB%AF/%E7%9B%B4%E6%92%AD%E5%BC%80%E5%8F%91/</link>
      <pubDate>Thu, 26 Aug 2021 16:46:41 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E5%90%8E%E7%AB%AF/%E7%9B%B4%E6%92%AD%E5%BC%80%E5%8F%91/</guid>
      <description>腾讯云直播 使用腾讯 云直播·标准直播 产品进行直播需求开发 产品文档 基本概念 推流 主播将本地视频源和音频源推送到腾讯视频云服务器，在有些场景中也被称</description>
    </item>
    
    <item>
      <title>安全层面-限流策略</title>
      <link>https://zsmhub.github.io/post/%E5%90%8E%E7%AB%AF/%E5%AE%89%E5%85%A8%E5%B1%82%E9%9D%A2-%E9%99%90%E6%B5%81%E7%AD%96%E7%95%A5/</link>
      <pubDate>Thu, 12 Aug 2021 10:23:52 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E5%90%8E%E7%AB%AF/%E5%AE%89%E5%85%A8%E5%B1%82%E9%9D%A2-%E9%99%90%E6%B5%81%E7%AD%96%E7%95%A5/</guid>
      <description>一、问题背景 最近公司最近的几台线上服务器经常出现CPU覆盖过高,影响部分应用响应超时,产生了大量的短信和邮件报警,经过排查数据库日志和acc</description>
    </item>
    
    <item>
      <title>云原生</title>
      <link>https://zsmhub.github.io/post/%E6%9C%8D%E5%8A%A1%E5%99%A8/%E4%BA%91%E5%8E%9F%E7%94%9F/</link>
      <pubDate>Thu, 05 Aug 2021 09:07:55 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E6%9C%8D%E5%8A%A1%E5%99%A8/%E4%BA%91%E5%8E%9F%E7%94%9F/</guid>
      <description>云原生四大要点：DevOps+持续交付+微服务+容器。 总而言之，符合云原生架构的应用程序应该是：采用开源堆栈（K8S+Docker）进行容器</description>
    </item>
    
    <item>
      <title>Http客户端</title>
      <link>https://zsmhub.github.io/post/golang/http%E5%AE%A2%E6%88%B7%E7%AB%AF/</link>
      <pubDate>Wed, 28 Jul 2021 10:03:21 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/golang/http%E5%AE%A2%E6%88%B7%E7%AB%AF/</guid>
      <description>理解 timeout timeout 又可以细分为 connect timeout、read timeout、write timeout。而 read timeout 和 write timeout 必须是在 connect 之后才能发生。 ReadTime</description>
    </item>
    
    <item>
      <title>分布式事务</title>
      <link>https://zsmhub.github.io/post/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84/%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1/</link>
      <pubDate>Thu, 22 Jul 2021 09:09:30 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84/%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1/</guid>
      <description>TCC 分布式事务 TCC 是 Try、Confirm、Cancel 三个词语的缩写。 TCC 分为 3 个阶段 Try 阶段：尝试执行，完成所有业务检查（一致性）, 预留必须业务</description>
    </item>
    
    <item>
      <title>理财之路</title>
      <link>https://zsmhub.github.io/post/%E7%94%9F%E6%B4%BB%E7%AC%94%E8%AE%B0/%E7%90%86%E8%B4%A2%E4%B9%8B%E8%B7%AF/</link>
      <pubDate>Mon, 12 Jul 2021 15:20:52 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E7%94%9F%E6%B4%BB%E7%AC%94%E8%AE%B0/%E7%90%86%E8%B4%A2%E4%B9%8B%E8%B7%AF/</guid>
      <description>通俗理解通胀、通缩 通胀（通货膨胀是指市场上流通的货币增多，货币贬值，物价上涨，经济能得到发展。） 起初，市场上100块肉，货币100元，1块肉</description>
    </item>
    
    <item>
      <title>项目部署与发布</title>
      <link>https://zsmhub.github.io/post/%E5%90%8E%E7%AB%AF/%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E4%B8%8E%E5%8F%91%E5%B8%83/</link>
      <pubDate>Wed, 07 Jul 2021 09:26:58 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E5%90%8E%E7%AB%AF/%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E4%B8%8E%E5%8F%91%E5%B8%83/</guid>
      <description>目前我们的k8s部署是通过金丝雀发布（灰度发布）， 发布新版本时，当新版本的Pod全部启动成功后，依次替换旧版本的pod 旧版本的Pod继续运行</description>
    </item>
    
    <item>
      <title>Go Zero</title>
      <link>https://zsmhub.github.io/post/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84/go-zero/</link>
      <pubDate>Fri, 04 Jun 2021 15:43:03 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84/go-zero/</guid>
      <description>官方文档 点击前往 启动服务 1 2 // API 或 rpc 代码运行 cd project/service/user/cmd/api &amp;amp;&amp;amp; go run user.go -f etc/user.yaml rpc调用链建议 在设计系统时，尽量做到服务之间调用链是单向的，而非循环调用，例如</description>
    </item>
    
    <item>
      <title>面向故障编程</title>
      <link>https://zsmhub.github.io/post/%E5%90%8E%E7%AB%AF/%E9%9D%A2%E5%90%91%E6%95%85%E9%9A%9C%E7%BC%96%E7%A8%8B/</link>
      <pubDate>Thu, 27 May 2021 11:11:52 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E5%90%8E%E7%AB%AF/%E9%9D%A2%E5%90%91%E6%95%85%E9%9A%9C%E7%BC%96%E7%A8%8B/</guid>
      <description>Bug与故障 Bug Bug 是指在软件运行中因为程序本身有错误而造成的功能不正常、死机、数据丢失、非正常中断等现象。有些程序错误会造成计算机安全隐患，此</description>
    </item>
    
    <item>
      <title>CDN-内容分发网络</title>
      <link>https://zsmhub.github.io/post/%E5%90%8E%E7%AB%AF/cdn-%E5%86%85%E5%AE%B9%E5%88%86%E5%8F%91%E7%BD%91%E7%BB%9C/</link>
      <pubDate>Tue, 25 May 2021 11:16:12 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E5%90%8E%E7%AB%AF/cdn-%E5%86%85%E5%AE%B9%E5%88%86%E5%8F%91%E7%BD%91%E7%BB%9C/</guid>
      <description>内容分发网络（Content Delivery Network，CDN）通过将站点内容发布至遍布全球的海量加速节点，使其用户可就近获取所需内容，避免因网络拥堵</description>
    </item>
    
    <item>
      <title>制作简历平台</title>
      <link>https://zsmhub.github.io/post/%E9%9D%A2%E8%AF%95%E5%BF%85%E5%A4%87/%E5%88%B6%E4%BD%9C%E7%AE%80%E5%8E%86%E5%B9%B3%E5%8F%B0/</link>
      <pubDate>Fri, 21 May 2021 14:14:15 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E9%9D%A2%E8%AF%95%E5%BF%85%E5%A4%87/%E5%88%B6%E4%BD%9C%E7%AE%80%E5%8E%86%E5%B9%B3%E5%8F%B0/</guid>
      <description>500丁 http://www.500d.me/ 一纸简历 https://cv.devtool.tech/app 木及简历 https://resume.mdedit.online/</description>
    </item>
    
    <item>
      <title>常见功能流程图汇总</title>
      <link>https://zsmhub.github.io/post/%E5%AE%9E%E6%88%98%E6%A1%88%E4%BE%8B/%E5%B8%B8%E8%A7%81%E5%8A%9F%E8%83%BD%E6%B5%81%E7%A8%8B%E5%9B%BE%E6%B1%87%E6%80%BB/</link>
      <pubDate>Mon, 17 May 2021 15:21:36 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E5%AE%9E%E6%88%98%E6%A1%88%E4%BE%8B/%E5%B8%B8%E8%A7%81%E5%8A%9F%E8%83%BD%E6%B5%81%E7%A8%8B%E5%9B%BE%E6%B1%87%E6%80%BB/</guid>
      <description>登录流程 产品原型 后端流程图 友盟一键登录文档 一键登录接口文档：点击前往 服务端签名机制：点击前往 微信授权登录 api 文档 点击前往 1 2 3 4 5 6 7 8 9 10 11</description>
    </item>
    
    <item>
      <title>Http</title>
      <link>https://zsmhub.github.io/post/%E5%90%8E%E7%AB%AF/http/</link>
      <pubDate>Thu, 13 May 2021 09:23:19 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E5%90%8E%E7%AB%AF/http/</guid>
      <description>http状态码 优雅地使用 301 搞懂 HTTP 重定向 - 如何优雅地使用 301 浏览器收到 301永久重定向 后，认为这是一个可以缓存的资源，下次请求该链接是就不再向服</description>
    </item>
    
    <item>
      <title>行存储模式和列存储模式</title>
      <link>https://zsmhub.github.io/post/database/%E8%A1%8C%E5%AD%98%E5%82%A8%E6%A8%A1%E5%BC%8F%E5%92%8C%E5%88%97%E5%AD%98%E5%82%A8%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Mon, 10 May 2021 09:38:42 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/database/%E8%A1%8C%E5%AD%98%E5%82%A8%E6%A8%A1%E5%BC%8F%E5%92%8C%E5%88%97%E5%AD%98%E5%82%A8%E6%A8%A1%E5%BC%8F/</guid>
      <description>行存储和列存储，是数据库底层组织数据的方式。（和文档型、K-V 型，时序型等概念不在一个层次） 行存储 行存储系统以行的方式来组织数据。 1 2 3 4 5</description>
    </item>
    
    <item>
      <title>用 etcd 实现 API 网关</title>
      <link>https://zsmhub.github.io/post/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84/api%E7%BD%91%E5%85%B3%E5%AE%9E%E7%8E%B0-etcd/</link>
      <pubDate>Thu, 06 May 2021 11:28:32 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84/api%E7%BD%91%E5%85%B3%E5%AE%9E%E7%8E%B0-etcd/</guid>
      <description>应用场景 etcd 是一个高可用强一致性的键值仓库，在很多分布式系统架构中得到了广泛的应用，其最经典的使用场景就是服务发现。 etcd 的场景默认处理的数据都是</description>
    </item>
    
    <item>
      <title>账号层级限流-抢白名单功能</title>
      <link>https://zsmhub.github.io/post/%E5%AE%9E%E6%88%98%E6%A1%88%E4%BE%8B/%E9%99%90%E6%B5%81-%E6%8A%A2%E7%99%BD%E5%90%8D%E5%8D%95%E5%8A%9F%E8%83%BD/</link>
      <pubDate>Wed, 21 Apr 2021 10:17:44 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E5%AE%9E%E6%88%98%E6%A1%88%E4%BE%8B/%E9%99%90%E6%B5%81-%E6%8A%A2%E7%99%BD%E5%90%8D%E5%8D%95%E5%8A%9F%E8%83%BD/</guid>
      <description>功能说明 应用场景 数据库高负荷时，在员工账号层级进行限流，目的是让数据库尽早缓冲过来 特色功能 支持临时 追加/减少 白名单名额 支持重置白名单 直接配置</description>
    </item>
    
    <item>
      <title>电商架构</title>
      <link>https://zsmhub.github.io/post/%E5%AE%9E%E6%88%98%E6%A1%88%E4%BE%8B/%E7%94%B5%E5%95%86%E6%9E%B6%E6%9E%84/</link>
      <pubDate>Wed, 21 Apr 2021 09:37:03 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E5%AE%9E%E6%88%98%E6%A1%88%E4%BE%8B/%E7%94%B5%E5%95%86%E6%9E%B6%E6%9E%84/</guid>
      <description>小米海外电商架构 点击查看原文</description>
    </item>
    
    <item>
      <title>Go中的单元测试和基准测试</title>
      <link>https://zsmhub.github.io/post/golang/go%E4%B8%AD%E7%9A%84%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95%E5%92%8C%E5%9F%BA%E5%87%86%E6%B5%8B%E8%AF%95/</link>
      <pubDate>Wed, 14 Apr 2021 10:42:55 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/golang/go%E4%B8%AD%E7%9A%84%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95%E5%92%8C%E5%9F%BA%E5%87%86%E6%B5%8B%E8%AF%95/</guid>
      <description>TDD Test-Driven Development: 测试驱动开发，是敏捷开发中的一项核心实践和技术，也是一种设计方法论。TDD的原理是在开发功能代码之前，先编写单元测试用例代码，测试代码</description>
    </item>
    
    <item>
      <title>APP接入收发红包功能</title>
      <link>https://zsmhub.github.io/post/%E5%AE%9E%E6%88%98%E6%A1%88%E4%BE%8B/app%E6%8E%A5%E5%85%A5%E6%94%B6%E5%8F%91%E7%BA%A2%E5%8C%85%E5%8A%9F%E8%83%BD/</link>
      <pubDate>Thu, 08 Apr 2021 15:59:35 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E5%AE%9E%E6%88%98%E6%A1%88%E4%BE%8B/app%E6%8E%A5%E5%85%A5%E6%94%B6%E5%8F%91%E7%BA%A2%E5%8C%85%E5%8A%9F%E8%83%BD/</guid>
      <description>APP 如何接入收发红包功能 使用支付宝的现金红包方案 现金红包简介 现金红包- 开发入门 现金红包是基于支付宝的支付能力推出的一款针对收发红包场景的产品，</description>
    </item>
    
    <item>
      <title>阿里云MySQL分析实例</title>
      <link>https://zsmhub.github.io/post/database/%E9%98%BF%E9%87%8C%E4%BA%91mysql%E5%88%86%E6%9E%90%E5%AE%9E%E4%BE%8B/</link>
      <pubDate>Mon, 29 Mar 2021 09:10:10 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/database/%E9%98%BF%E9%87%8C%E4%BA%91mysql%E5%88%86%E6%9E%90%E5%AE%9E%E4%BE%8B/</guid>
      <description>MySQL分析实例是 AnaylticDB MySQL (简称ADB)的一种标准适用场景，它可实现对MySQL的分析加速。针对RDS MySQL用户的复杂分析查询卡顿或者响应</description>
    </item>
    
    <item>
      <title>php和go对比</title>
      <link>https://zsmhub.github.io/post/%E9%9D%A2%E8%AF%95%E5%BF%85%E5%A4%87/php%E5%92%8Cgo%E5%AF%B9%E6%AF%94/</link>
      <pubDate>Wed, 17 Mar 2021 11:21:41 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E9%9D%A2%E8%AF%95%E5%BF%85%E5%A4%87/php%E5%92%8Cgo%E5%AF%B9%E6%AF%94/</guid>
      <description>php 优缺点 优点 php 支持泛型 php 支持 in_array php 同个函数的数组返回值，key可以随意变化 缺点，可维护性差 数据类型没有强制要求提前声明，同个变量可以支持多种数</description>
    </item>
    
    <item>
      <title>Go 常用案例</title>
      <link>https://zsmhub.github.io/post/golang/%E5%B8%B8%E7%94%A8%E6%A1%88%E4%BE%8B/</link>
      <pubDate>Fri, 08 Jan 2021 17:57:02 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/golang/%E5%B8%B8%E7%94%A8%E6%A1%88%E4%BE%8B/</guid>
      <description>golang中判断两个slice是否相等 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 package main import ( &amp;#34;bytes&amp;#34; &amp;#34;fmt&amp;#34; ) func main() { a := []byte{0, 1, 3, 2} b := []byte{0, 1, 3, 2} c := []byte{1, 1, 3, 2} fmt.Println(bytes.Equal(a, b)) fmt.Println(bytes.Equal(a, c)) } 计算</description>
    </item>
    
    <item>
      <title>位运算使用技巧</title>
      <link>https://zsmhub.github.io/post/%E5%90%8E%E7%AB%AF/%E4%BD%8D%E8%BF%90%E7%AE%97%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/</link>
      <pubDate>Thu, 31 Dec 2020 09:55:21 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E5%90%8E%E7%AB%AF/%E4%BD%8D%E8%BF%90%E7%AE%97%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/</guid>
      <description>位运算概览 符号 描述 运算规则 &amp;amp; 与 两个位都为1时，结果才为1 【选中A标签和B标签的用户bitmap=选中A标签的用户bitmap &amp;amp; 选中标签的用户</description>
    </item>
    
    <item>
      <title>Go Micro</title>
      <link>https://zsmhub.github.io/post/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84/go-micro/</link>
      <pubDate>Fri, 18 Dec 2020 09:30:23 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84/go-micro/</guid>
      <description>micro 常用的几个命令 micro server //启动服务端 micro login //登录服务 user: admin pass: micro micro new XXX //新建服务 micro services //服务列表 micro run XXX //挂载服务 micro status //查看服务状态 micro logs XXX //</description>
    </item>
    
    <item>
      <title>无限极分类树</title>
      <link>https://zsmhub.github.io/post/%E5%AE%9E%E6%88%98%E6%A1%88%E4%BE%8B/%E6%97%A0%E9%99%90%E6%9E%81%E5%88%86%E7%B1%BB%E6%A0%91/</link>
      <pubDate>Thu, 19 Nov 2020 09:33:51 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E5%AE%9E%E6%88%98%E6%A1%88%E4%BE%8B/%E6%97%A0%E9%99%90%E6%9E%81%E5%88%86%E7%B1%BB%E6%A0%91/</guid>
      <description>分类树 一般的分类树状结构有两种方式： 一种是adjacency list，也就是是id，parent_id这种形式。 另一种是nested set，</description>
    </item>
    
    <item>
      <title>Go的一些坑</title>
      <link>https://zsmhub.github.io/post/golang/go%E7%9A%84%E4%B8%80%E4%BA%9B%E5%9D%91/</link>
      <pubDate>Fri, 13 Nov 2020 11:17:51 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/golang/go%E7%9A%84%E4%B8%80%E4%BA%9B%E5%9D%91/</guid>
      <description>代码格式化 golang 自带的 go fmt 默认是是 tab 缩进， 而 goland IDE 的格式化默认是空格缩进【快捷键：option+command+L】 json的坑 []uint8 转 json 后，得不到想</description>
    </item>
    
    <item>
      <title>多系统对接-签名校验案例(PHP)</title>
      <link>https://zsmhub.github.io/post/%E5%AE%9E%E6%88%98%E6%A1%88%E4%BE%8B/%E7%AD%BE%E5%90%8D%E6%A0%A1%E9%AA%8C%E6%A1%88%E4%BE%8Bphp/</link>
      <pubDate>Thu, 12 Nov 2020 09:49:41 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E5%AE%9E%E6%88%98%E6%A1%88%E4%BE%8B/%E7%AD%BE%E5%90%8D%E6%A0%A1%E9%AA%8C%E6%A1%88%E4%BE%8Bphp/</guid>
      <description>config/Sign.php 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 &amp;lt;?php // 第三方平台调用『当前系统』接口的签名密钥 return [ // 签名生命周期设置，单位秒 &amp;#39;sign_ttl&amp;#39; =&amp;gt; env(&amp;#39;SIGN_TTL&amp;#39;, 600), // 签名类型 &amp;#39;sign_type_xxx&amp;#39; =&amp;gt; &amp;#39;xxx&amp;#39;, // xx</description>
    </item>
    
    <item>
      <title>两分钟规则</title>
      <link>https://zsmhub.github.io/post/%E7%94%9F%E6%B4%BB%E7%AC%94%E8%AE%B0/%E4%B8%A4%E5%88%86%E9%92%9F%E8%A7%84%E5%88%99/</link>
      <pubDate>Fri, 06 Nov 2020 09:32:46 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E7%94%9F%E6%B4%BB%E7%AC%94%E8%AE%B0/%E4%B8%A4%E5%88%86%E9%92%9F%E8%A7%84%E5%88%99/</guid>
      <description>2分钟规则 每当你发现很难开始执行某项任务时，可以试试将其缩减成2分钟的版本。 看一本书 → 看一页书 写一篇文章 → 写一句话 跑10公里 → 穿上跑鞋 做10</description>
    </item>
    
    <item>
      <title>http和https</title>
      <link>https://zsmhub.github.io/post/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/http%E5%92%8Chttps/</link>
      <pubDate>Thu, 29 Oct 2020 09:36:54 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/http%E5%92%8Chttps/</guid>
      <description>网络传输 互联网传输的三个非常重要的特点：延时、丢包、抖动。 延时和抖动天生就紧密相连，但它们其实并不同。延时是 数据 从网络上的一个端点移动到另一</description>
    </item>
    
    <item>
      <title>孩子教育记录</title>
      <link>https://zsmhub.github.io/post/%E7%94%9F%E6%B4%BB%E7%AC%94%E8%AE%B0/%E5%AD%A9%E5%AD%90%E6%95%99%E8%82%B2%E8%AE%B0%E5%BD%95/</link>
      <pubDate>Mon, 19 Oct 2020 10:02:48 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E7%94%9F%E6%B4%BB%E7%AC%94%E8%AE%B0/%E5%AD%A9%E5%AD%90%E6%95%99%E8%82%B2%E8%AE%B0%E5%BD%95/</guid>
      <description>兴趣班学习时间 三年级之前都是以启蒙为主，三年级后才能真正开始入门学习 注意事项 电视等电子产品使用注意 2 岁以下儿童：不应该接触任何屏幕时间，包括</description>
    </item>
    
    <item>
      <title>素描简单了解</title>
      <link>https://zsmhub.github.io/post/%E7%94%9F%E6%B4%BB%E7%AC%94%E8%AE%B0/%E7%B4%A0%E6%8F%8F%E7%AE%80%E5%8D%95%E4%BA%86%E8%A7%A3/</link>
      <pubDate>Sun, 18 Oct 2020 20:17:22 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E7%94%9F%E6%B4%BB%E7%AC%94%E8%AE%B0/%E7%B4%A0%E6%8F%8F%E7%AE%80%E5%8D%95%E4%BA%86%E8%A7%A3/</guid>
      <description>素描的定义 使用单一色彩表现明度变化的绘画。 素描是绘画的基础，绘画的骨骼；也是最节制、最需要理智来协助的艺术。 素描学习成长路线 第一阶段：素描石</description>
    </item>
    
    <item>
      <title>微服务</title>
      <link>https://zsmhub.github.io/post/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84/%E5%BE%AE%E6%9C%8D%E5%8A%A1/</link>
      <pubDate>Mon, 12 Oct 2020 11:38:53 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84/%E5%BE%AE%E6%9C%8D%E5%8A%A1/</guid>
      <description>为什么要用微服务 小项目发展到大项目过程中，出于维护、稳定性等考虑，将一个整体项目分为多个微小服务。 为什么说做好微服务很难 要想做好微服务，我们</description>
    </item>
    
    <item>
      <title>OLTP和OLAP</title>
      <link>https://zsmhub.github.io/post/database/oltp%E5%92%8Colap/</link>
      <pubDate>Sat, 10 Oct 2020 09:13:08 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/database/oltp%E5%92%8Colap/</guid>
      <description>根据数据库处理的业务数据量，以及处理数据的不同方式，人们把数据库分为 OLTP 和 OLAP 两大类型。 OLTP vs OLAP 常见的 Oracle、MySQL 等数据库都属于 OLTP 类型</description>
    </item>
    
    <item>
      <title>悟道</title>
      <link>https://zsmhub.github.io/post/%E7%94%9F%E6%B4%BB%E7%AC%94%E8%AE%B0/%E6%82%9F%E9%81%93/</link>
      <pubDate>Fri, 18 Sep 2020 08:59:40 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E7%94%9F%E6%B4%BB%E7%AC%94%E8%AE%B0/%E6%82%9F%E9%81%93/</guid>
      <description>禅 佛说，苦非苦，乐非乐，只是一时的执念而已。执于一念，将受困于一念；一念放下，会自在于心间。有些人，有些事，只可遇而不可求，既然这样，何不将</description>
    </item>
    
    <item>
      <title>可视化工具</title>
      <link>https://zsmhub.github.io/post/other/%E5%8F%AF%E8%A7%86%E5%8C%96%E5%B7%A5%E5%85%B7/</link>
      <pubDate>Sat, 05 Sep 2020 09:07:09 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/other/%E5%8F%AF%E8%A7%86%E5%8C%96%E5%B7%A5%E5%85%B7/</guid>
      <description>Metabase 概述 Metabase可以帮助你把数据库中的数据更好的呈现给更多人，数据分析人员通过建立一个”查询“（Metabase中定义为Questio</description>
    </item>
    
    <item>
      <title>PHP-FPM</title>
      <link>https://zsmhub.github.io/post/php/php-fpm/</link>
      <pubDate>Wed, 02 Sep 2020 16:04:33 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/php/php-fpm/</guid>
      <description>PHP-FPM CGI是Common Gateway Interface（通用网管协议），用于让交互程序和Web服务器通信的协议。它负责处理URL的请求，启动一个进程，将</description>
    </item>
    
    <item>
      <title>Go高级知识</title>
      <link>https://zsmhub.github.io/post/golang/go%E9%AB%98%E7%BA%A7%E7%9F%A5%E8%AF%86/</link>
      <pubDate>Sun, 30 Aug 2020 15:57:50 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/golang/go%E9%AB%98%E7%BA%A7%E7%9F%A5%E8%AF%86/</guid>
      <description>代码编译过程 全局变量会进行全局初始化 1 2 type noticeRepository struct{} var Notice = &amp;amp;noticeRepository{} model 层为何不全局实例化？因为 model 层的结构体带有属性，如果全局初始化则 model 层结构体实例的属性可</description>
    </item>
    
    <item>
      <title>Go之并发安全</title>
      <link>https://zsmhub.github.io/post/golang/go%E4%B9%8B%E5%B9%B6%E5%8F%91%E5%AE%89%E5%85%A8/</link>
      <pubDate>Sun, 23 Aug 2020 20:57:43 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/golang/go%E4%B9%8B%E5%B9%B6%E5%8F%91%E5%AE%89%E5%85%A8/</guid>
      <description>并发实践 Go 的开发者极力推荐使用 Channel，不过，这两年，大家意识到，Channel 并不是处理并发问题的“银弹”，有时候使用并发原语更简单</description>
    </item>
    
    <item>
      <title>GoAdmin</title>
      <link>https://zsmhub.github.io/post/golang/goadmin/</link>
      <pubDate>Tue, 18 Aug 2020 16:40:37 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/golang/goadmin/</guid>
      <description>准备工作 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 # 访问并登陆： - 登陆：http://127.0.0.1:9033/admin/login - 账号：ad</description>
    </item>
    
    <item>
      <title>程序员必备的代码审查清单</title>
      <link>https://zsmhub.github.io/post/%E7%A8%8B%E5%BA%8F%E5%91%98/%E4%BB%A3%E7%A0%81%E5%AE%A1%E6%9F%A5%E6%B8%85%E5%8D%95/</link>
      <pubDate>Mon, 17 Aug 2020 16:38:01 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E7%A8%8B%E5%BA%8F%E5%91%98/%E4%BB%A3%E7%A0%81%E5%AE%A1%E6%9F%A5%E6%B8%85%E5%8D%95/</guid>
      <description>编码规范 编程思想由 MVC模式 转向 MBC模式，M：模型层，B: 业务逻辑层，C：控制器层 路由命名：一般以 纯小写 或 小写+中划线 命名，比较易读 变量名</description>
    </item>
    
    <item>
      <title>IO - 同步异步，阻塞非阻塞</title>
      <link>https://zsmhub.github.io/post/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/%E7%90%86%E8%A7%A3%E5%90%8C%E6%AD%A5%E5%BC%82%E6%AD%A5%E5%92%8C%E9%98%BB%E5%A1%9E%E9%9D%9E%E9%98%BB%E5%A1%9E/</link>
      <pubDate>Sun, 16 Aug 2020 14:54:25 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/%E7%90%86%E8%A7%A3%E5%90%8C%E6%AD%A5%E5%BC%82%E6%AD%A5%E5%92%8C%E9%98%BB%E5%A1%9E%E9%9D%9E%E9%98%BB%E5%A1%9E/</guid>
      <description>同步(Sync)/异步(Async)，阻塞(Block)/非阻塞(Unblock) 两者定义的针对目标不同，异步同步是针对 响应 本身的，阻塞非阻</description>
    </item>
    
    <item>
      <title>备忘录</title>
      <link>https://zsmhub.github.io/post/%E7%94%9F%E6%B4%BB%E7%AC%94%E8%AE%B0/%E5%A4%87%E5%BF%98%E5%BD%95/</link>
      <pubDate>Tue, 11 Aug 2020 22:10:42 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E7%94%9F%E6%B4%BB%E7%AC%94%E8%AE%B0/%E5%A4%87%E5%BF%98%E5%BD%95/</guid>
      <description>互联网时代·个人隐私安全 输入法禁止联网，或者使用其他单机输入法 macos: 系统偏好设置-&amp;gt;安全性与隐私-&amp;gt;开启防火墙-&amp;gt;防火墙选项-</description>
    </item>
    
    <item>
      <title>Canal</title>
      <link>https://zsmhub.github.io/post/database/canal/</link>
      <pubDate>Mon, 10 Aug 2020 11:19:13 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/database/canal/</guid>
      <description>canal 简介 canal github canal 是阿里开发的一款基于数据库增量日志解析，提供增量数据订阅与消费的框架，可以很方便地同步数据库的增量数据到其他的存储应用。 整个框架</description>
    </item>
    
    <item>
      <title>专业的MQ</title>
      <link>https://zsmhub.github.io/post/%E5%90%8E%E7%AB%AF/%E4%B8%93%E4%B8%9A%E7%9A%84mq/</link>
      <pubDate>Mon, 10 Aug 2020 09:22:30 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E5%90%8E%E7%AB%AF/%E4%B8%93%E4%B8%9A%E7%9A%84mq/</guid>
      <description>一个专业的消息队列，必须要做到两点： 消息不丢 消息可堆积 PHP+ActiveMQ+Stomp ActiveMQ 是由 Apache 出品的一款开源消息中间件，旨在为应用程序提供高效、可扩展、稳定、安全的企业级</description>
    </item>
    
    <item>
      <title>监控辅助平台</title>
      <link>https://zsmhub.github.io/post/%E6%9C%8D%E5%8A%A1%E5%99%A8/%E7%9B%91%E6%8E%A7%E8%BE%85%E5%8A%A9%E5%B9%B3%E5%8F%B0/</link>
      <pubDate>Sat, 08 Aug 2020 18:02:57 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E6%9C%8D%E5%8A%A1%E5%99%A8/%E7%9B%91%E6%8E%A7%E8%BE%85%E5%8A%A9%E5%B9%B3%E5%8F%B0/</guid>
      <description>日志监控系统 ELK Logs(Open source log monitoring) 服务器监控系统 Zabbix statsd + influxdb + grafana(监控UI平台) 网关链路追踪 作用：限流、降级、接口请求链路追踪、接口响应时间等 1</description>
    </item>
    
    <item>
      <title>实战案例总结</title>
      <link>https://zsmhub.github.io/post/%E5%AE%9E%E6%88%98%E6%A1%88%E4%BE%8B/%E5%AE%9E%E6%88%98%E6%A1%88%E4%BE%8B%E6%80%BB%E7%BB%93/</link>
      <pubDate>Thu, 06 Aug 2020 09:21:45 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E5%AE%9E%E6%88%98%E6%A1%88%E4%BE%8B/%E5%AE%9E%E6%88%98%E6%A1%88%E4%BE%8B%E6%80%BB%E7%BB%93/</guid>
      <description>根据nginx的access_log分析接口请求 access_log：指的是访问日志，我们通过访问日志可以获取用户的 IP、请求处理的时间、接</description>
    </item>
    
    <item>
      <title>孕妇相关</title>
      <link>https://zsmhub.github.io/post/%E7%94%9F%E6%B4%BB%E7%AC%94%E8%AE%B0/%E5%AD%95%E5%A6%87%E7%9B%B8%E5%85%B3/</link>
      <pubDate>Tue, 04 Aug 2020 12:33:18 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E7%94%9F%E6%B4%BB%E7%AC%94%E8%AE%B0/%E5%AD%95%E5%A6%87%E7%9B%B8%E5%85%B3/</guid>
      <description>孕妇忌讳 不能吃：龙眼，薏米，山楂，人参，凉茶，祛湿茶等 有甲减的孕妇不能吃海苔、紫菜、瑶柱、海虾等海产品 甲减孕妇注意 优甲乐过量可能导致的问题：</description>
    </item>
    
    <item>
      <title>监控系统方案</title>
      <link>https://zsmhub.github.io/post/%E6%9C%8D%E5%8A%A1%E5%99%A8/%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F%E6%96%B9%E6%A1%88/</link>
      <pubDate>Mon, 03 Aug 2020 22:19:44 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E6%9C%8D%E5%8A%A1%E5%99%A8/%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F%E6%96%B9%E6%A1%88/</guid>
      <description>StatsD + Grafana + InfluxDB 使用 StatsD + Grafana + InfluxDB 搭建 Node.js 监控系统 StatsD 是一个使用 Node.js 开发的简单的网络守护进程，通过 UDP 或者 TCP 方式侦听各种统计信息，包括计数器和定时器，并发送聚</description>
    </item>
    
    <item>
      <title>大数据表设计-TableStore</title>
      <link>https://zsmhub.github.io/post/database/tablestore/</link>
      <pubDate>Sun, 02 Aug 2020 10:13:11 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/database/tablestore/</guid>
      <description>简介 表格存储（Tablestore）是阿里云自研的NoSQL多模型数据库，提供海量结构化数据存储以及快速的查询和分析服务。表格存储的分布式存</description>
    </item>
    
    <item>
      <title>Mysql 和 MariaDB</title>
      <link>https://zsmhub.github.io/post/database/mysql%E5%92%8Cmariadb/</link>
      <pubDate>Mon, 27 Jul 2020 15:13:43 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/database/mysql%E5%92%8Cmariadb/</guid>
      <description>Mysql 和 MariaDB 的关系 MariaDB 数据库管理系统是 MySQL 的一个分支，主要由开源社区在维护，采用GPL授权许可。 开发这个分支的原因之一是：甲骨文公司收购了 MySQL 后，有将 MySQL</description>
    </item>
    
    <item>
      <title>Echo 框架</title>
      <link>https://zsmhub.github.io/post/golang/%E6%A1%86%E6%9E%B6-echo%E6%A1%86%E6%9E%B6/</link>
      <pubDate>Sun, 26 Jul 2020 09:17:00 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/golang/%E6%A1%86%E6%9E%B6-echo%E6%A1%86%E6%9E%B6/</guid>
      <description>Echo 入门示例 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 package main import ( &amp;#34;net/http&amp;#34; &amp;#34;github.com/labstack/echo/v4&amp;#34; &amp;#34;github.com/labstack/echo/v4/middleware&amp;#34; ) func main() { // Echo instance e := echo.New() // Middleware e.Use(middleware.Logger()) e.Use(middleware.Recover()) // Routes e.GET(&amp;#34;/&amp;#34;, hello) // Start server // e.Logger.Fatal(e.Start(&amp;#34;:1323&amp;#34;)) // 平</description>
    </item>
    
    <item>
      <title>运动之路</title>
      <link>https://zsmhub.github.io/post/%E7%94%9F%E6%B4%BB%E7%AC%94%E8%AE%B0/%E8%BF%90%E5%8A%A8%E4%B9%8B%E8%B7%AF/</link>
      <pubDate>Sun, 19 Jul 2020 21:26:28 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E7%94%9F%E6%B4%BB%E7%AC%94%E8%AE%B0/%E8%BF%90%E5%8A%A8%E4%B9%8B%E8%B7%AF/</guid>
      <description>游泳 游泳时不要同手同脚 蛙泳的配合技术通常采用一次臂、一次腿、一次呼吸。两臂外划时，抬头吸气，然后收腿，伸臂时呼气；两臂向前将伸直时，两腿蹬夹</description>
    </item>
    
    <item>
      <title>Mysql高级知识</title>
      <link>https://zsmhub.github.io/post/database/mysql%E9%AB%98%E7%BA%A7%E7%9F%A5%E8%AF%86/</link>
      <pubDate>Sun, 12 Jul 2020 13:51:13 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/database/mysql%E9%AB%98%E7%BA%A7%E7%9F%A5%E8%AF%86/</guid>
      <description>MySQL 架构 连接层：最上层是一些客户端和连接服务。主要完成一些类似于连接处理、授权认证、及相关的安全方案。在该层上引入了线程池的概念，为通过认证安</description>
    </item>
    
    <item>
      <title>正反向代理简介</title>
      <link>https://zsmhub.github.io/post/%E7%A8%8B%E5%BA%8F%E5%91%98/%E6%AD%A3%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E7%AE%80%E4%BB%8B/</link>
      <pubDate>Thu, 09 Jul 2020 21:33:12 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E7%A8%8B%E5%BA%8F%E5%91%98/%E6%AD%A3%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E7%AE%80%E4%BB%8B/</guid>
      <description>正向代理 正向代理隐藏了真实的请求客户端。（客户端需要主动做代理设置。） 比如X花店代A,B,C,D,E五位男生向Candy女生送匿名的生日鲜花</description>
    </item>
    
    <item>
      <title>Go切片详解</title>
      <link>https://zsmhub.github.io/post/golang/go%E5%88%87%E7%89%87%E8%AF%A6%E8%A7%A3/</link>
      <pubDate>Wed, 08 Jul 2020 09:40:36 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/golang/go%E5%88%87%E7%89%87%E8%AF%A6%E8%A7%A3/</guid>
      <description>前言 通过上一篇博文，我们学习了数组的使用，但是数组有一个致命的缺陷，那就是大小固定，这个特性并不能满足我们平时的开发需求，所以Go的切片由此</description>
    </item>
    
    <item>
      <title>工作流</title>
      <link>https://zsmhub.github.io/post/%E5%90%8E%E7%AB%AF/%E5%B7%A5%E4%BD%9C%E6%B5%81/</link>
      <pubDate>Thu, 02 Jul 2020 09:09:47 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E5%90%8E%E7%AB%AF/%E5%B7%A5%E4%BD%9C%E6%B5%81/</guid>
      <description>概述 工作流实现功能包括：流程自定义、步骤自定义、步骤重复次数、步骤类型（串行/并行）、定义排序功能。 工作流[workflow]：在多个参与人</description>
    </item>
    
    <item>
      <title>Laravel 如何在预加载中指定查询的字段</title>
      <link>https://zsmhub.github.io/post/php/laravel%E5%A6%82%E4%BD%95%E5%9C%A8%E9%A2%84%E5%8A%A0%E8%BD%BD%E4%B8%AD%E6%8C%87%E5%AE%9A%E6%9F%A5%E8%AF%A2%E7%9A%84%E5%AD%97%E6%AE%B5/</link>
      <pubDate>Tue, 30 Jun 2020 18:30:58 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/php/laravel%E5%A6%82%E4%BD%95%E5%9C%A8%E9%A2%84%E5%8A%A0%E8%BD%BD%E4%B8%AD%E6%8C%87%E5%AE%9A%E6%9F%A5%E8%AF%A2%E7%9A%84%E5%AD%97%E6%AE%B5/</guid>
      <description>预加载指定列 并不是总需要获取关系的每一列。在这种情况下，Eloquent 允许你为关联指定想要获取的列： 1 2 3 4 $result = User::with(&amp;#39;topics:user_id,body,title&amp;#39;) -&amp;gt;where(&amp;#39;name&amp;#39;, &amp;#39;Summer&amp;#39;) -&amp;gt;get() -&amp;gt;toArray(); 注意：在使用这个</description>
    </item>
    
    <item>
      <title>NSQ-分布式实时消息处理平台</title>
      <link>https://zsmhub.github.io/post/golang/nsq-%E5%88%86%E5%B8%83%E5%BC%8F%E5%AE%9E%E6%97%B6%E6%B6%88%E6%81%AF%E5%A4%84%E7%90%86%E5%B9%B3%E5%8F%B0/</link>
      <pubDate>Sun, 28 Jun 2020 10:50:45 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/golang/nsq-%E5%88%86%E5%B8%83%E5%BC%8F%E5%AE%9E%E6%97%B6%E6%B6%88%E6%81%AF%E5%A4%84%E7%90%86%E5%B9%B3%E5%8F%B0/</guid>
      <description>NSQ 简介 NSQ 是一个基于 Go 语言的分布式实时消息处理平台，它基于 MIT 开源协议发布，由 bitly 公司开源出来的一款简单易用的消息中间件。其设计的目的是用来大规模</description>
    </item>
    
    <item>
      <title>ElasticStack</title>
      <link>https://zsmhub.github.io/post/%E5%90%8E%E7%AB%AF/elasticstack/</link>
      <pubDate>Tue, 16 Jun 2020 08:55:16 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E5%90%8E%E7%AB%AF/elasticstack/</guid>
      <description>Elastic Stack “ELK”是三个开源项目的首字母缩写，这三个项目分别是：Elasticsearch、Logstash 和 Kibana。 Elasticsearch 是一个搜索和分析引</description>
    </item>
    
    <item>
      <title>缓存之雪崩、击穿、穿透</title>
      <link>https://zsmhub.github.io/post/database/%E7%BC%93%E5%AD%98%E4%B9%8B%E9%9B%AA%E5%B4%A9-%E5%87%BB%E7%A9%BF-%E7%A9%BF%E9%80%8F/</link>
      <pubDate>Sun, 31 May 2020 16:22:36 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/database/%E7%BC%93%E5%AD%98%E4%B9%8B%E9%9B%AA%E5%B4%A9-%E5%87%BB%E7%A9%BF-%E7%A9%BF%E9%80%8F/</guid>
      <description>缓存雪崩 缓存雪崩是指在我们设置缓存时采用了相同的过期时间，导致缓存在某一时刻同时失效，请求全部转发到 DB，DB 瞬时压力过重导致雪崩。 解决方案</description>
    </item>
    
    <item>
      <title>Go defer 使用</title>
      <link>https://zsmhub.github.io/post/golang/go%E4%B9%8Bdefer%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Sat, 30 May 2020 09:02:27 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/golang/go%E4%B9%8Bdefer%E4%BD%BF%E7%94%A8/</guid>
      <description>golang defer 这个使用的执行流程一直很绕，所以决定写一篇文记录一下。 规则一：当defer被声明时，其参数就会被实时解析 案例一 1 2 3 4 5 6 7 8 9 10 11 12 13</description>
    </item>
    
    <item>
      <title>Mysql 经典案例</title>
      <link>https://zsmhub.github.io/post/database/mysql%E7%BB%8F%E5%85%B8%E6%A1%88%E4%BE%8B/</link>
      <pubDate>Fri, 29 May 2020 19:13:07 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/database/mysql%E7%BB%8F%E5%85%B8%E6%A1%88%E4%BE%8B/</guid>
      <description>too many connection 报错可能原因 机器负载飙升，导致SQL执行效率下降，导致连接堆积 业务访问量突增（或者有SQL注入现象），导致连接数打满 出现“死锁”或者锁</description>
    </item>
    
    <item>
      <title>Go 常用库</title>
      <link>https://zsmhub.github.io/post/golang/go%E5%B8%B8%E7%94%A8%E5%BA%93/</link>
      <pubDate>Tue, 26 May 2020 16:54:52 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/golang/go%E5%B8%B8%E7%94%A8%E5%BA%93/</guid>
      <description>标准库 time 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66</description>
    </item>
    
    <item>
      <title>LB 集群</title>
      <link>https://zsmhub.github.io/post/%E5%90%8E%E7%AB%AF/lb%E9%9B%86%E7%BE%A4/</link>
      <pubDate>Tue, 26 May 2020 09:04:22 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E5%90%8E%E7%AB%AF/lb%E9%9B%86%E7%BE%A4/</guid>
      <description>简介 LB 集群是 Load Balance 集群的简写，翻译成中文就是负载均衡集群. 负载均衡的应用场景为高访问量的业务，提高应用程序的可用性和可靠性。 原理 负载均衡的原理</description>
    </item>
    
    <item>
      <title>MacOs 之 brew</title>
      <link>https://zsmhub.github.io/post/macos/macos-brew/</link>
      <pubDate>Sun, 24 May 2020 13:46:00 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/macos/macos-brew/</guid>
      <description>brew 和 brew cask 区别 brew主要是用于安装没UI的软件。 brew cask主要用于安装有UI的软件。 brew 是 MacOs 下的包管理工具，通过 Github 托管适合 Mac 的编译配置以及 Pa</description>
    </item>
    
    <item>
      <title>MacOs 使用心得</title>
      <link>https://zsmhub.github.io/post/macos/macos%E4%BD%BF%E7%94%A8%E5%BF%83%E5%BE%97/</link>
      <pubDate>Sun, 24 May 2020 13:30:56 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/macos/macos%E4%BD%BF%E7%94%A8%E5%BF%83%E5%BE%97/</guid>
      <description>MacBook 键盘符号和修饰键说明 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 ⌘ ——&amp;gt; Command ⇧ ——&amp;gt; Shift ⌥ ——&amp;gt; Option ⌃ ——&amp;gt; Control ↩︎ ——&amp;gt; Return/Enter</description>
    </item>
    
    <item>
      <title>Go ELK 日志收集方案</title>
      <link>https://zsmhub.github.io/post/golang/go%E4%B9%8Belk%E6%97%A5%E5%BF%97%E6%94%B6%E9%9B%86%E6%96%B9%E6%A1%88/</link>
      <pubDate>Sat, 23 May 2020 14:51:21 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/golang/go%E4%B9%8Belk%E6%97%A5%E5%BF%97%E6%94%B6%E9%9B%86%E6%96%B9%E6%A1%88/</guid>
      <description>ELK 简介 对于日志来说，最常见的需求就是收集、存储、查询、展示，开源社区正好有相对应的开源项目 elasticsearch（存储+搜索）, logs</description>
    </item>
    
    <item>
      <title>常用软件和平台</title>
      <link>https://zsmhub.github.io/post/ide/%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E5%92%8C%E5%B9%B3%E5%8F%B0/</link>
      <pubDate>Tue, 19 May 2020 21:18:05 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/ide/%E5%B8%B8%E7%94%A8%E8%BD%AF%E4%BB%B6%E5%92%8C%E5%B9%B3%E5%8F%B0/</guid>
      <description>code SourceTree TortoiseSvn / TortoiseGit IDE sublime visual studio code phpStorm hbuilder gvim / macvim database powerdesigner / workbench navicat SQLyog sequelPro datagrip DBeaver Robot 3T (MongoDB) ssh windows: SecureCRT MacOs: iTerm2 CI/CD gitlab/github Jenkins Ant phpunit api 接口平台 ApiDoc：是一款可以有源代码中的注释直接自动生成ap</description>
    </item>
    
    <item>
      <title>JetBrains</title>
      <link>https://zsmhub.github.io/post/ide/jetbrains/</link>
      <pubDate>Tue, 19 May 2020 21:09:40 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/ide/jetbrains/</guid>
      <description>常用快捷键 GoLand快捷键说明文章 Goland 快捷键整理 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 Double shift: 查找任何东西（包</description>
    </item>
    
    <item>
      <title>女性轻松了解下HPV</title>
      <link>https://zsmhub.github.io/post/%E7%94%9F%E6%B4%BB%E7%AC%94%E8%AE%B0/%E5%A5%B3%E6%80%A7%E8%BD%BB%E6%9D%BE%E4%BA%86%E8%A7%A3%E4%B8%8Bhpv/</link>
      <pubDate>Mon, 18 May 2020 11:21:18 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E7%94%9F%E6%B4%BB%E7%AC%94%E8%AE%B0/%E5%A5%B3%E6%80%A7%E8%BD%BB%E6%9D%BE%E4%BA%86%E8%A7%A3%E4%B8%8Bhpv/</guid>
      <description>转载声明 作者：香港卫生署学生健康服务 链接：https://www.studenthealth.gov.hk/sc_chi/health/he</description>
    </item>
    
    <item>
      <title>性教育科普</title>
      <link>https://zsmhub.github.io/post/%E7%94%9F%E6%B4%BB%E7%AC%94%E8%AE%B0/%E6%80%A7%E6%95%99%E8%82%B2%E7%A7%91%E6%99%AE/</link>
      <pubDate>Mon, 18 May 2020 10:30:40 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E7%94%9F%E6%B4%BB%E7%AC%94%E8%AE%B0/%E6%80%A7%E6%95%99%E8%82%B2%E7%A7%91%E6%99%AE/</guid>
      <description>提示：以下均是图片，可点击查看大图。 一、正确理解青春期 二、在家庭中推行性教育 三、两性相处 四、约会与恋爱 五、结婚与婚后 六、保护自己，杜绝性侵发</description>
    </item>
    
    <item>
      <title>夫妻之间</title>
      <link>https://zsmhub.github.io/post/%E7%94%9F%E6%B4%BB%E7%AC%94%E8%AE%B0/%E5%A4%AB%E5%A6%BB%E4%B9%8B%E9%97%B4/</link>
      <pubDate>Mon, 18 May 2020 10:16:32 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E7%94%9F%E6%B4%BB%E7%AC%94%E8%AE%B0/%E5%A4%AB%E5%A6%BB%E4%B9%8B%E9%97%B4/</guid>
      <description>夫妻、伴侣之间如何「好好谈钱」 夫妻、伴侣之间，千万不要害怕谈钱。因为一个双方经过开诚布公讨论、有所共识的财务分配机制，对维系良好婚姻关系的帮</description>
    </item>
    
    <item>
      <title>API Gateway</title>
      <link>https://zsmhub.github.io/post/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84/api%E7%BD%91%E5%85%B3/</link>
      <pubDate>Sun, 17 May 2020 20:05:18 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84/api%E7%BD%91%E5%85%B3/</guid>
      <description>API 网关简介 随着移动互联网的兴起、开放合作思维的盛行，不同终端和第三方开发者都需要大量的接入企业核心业务能力，此时各业务系统将会面临同一系列的</description>
    </item>
    
    <item>
      <title>Restful、SOAP、RPC、gRPC、SOA、微服务之间的区别</title>
      <link>https://zsmhub.github.io/post/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84/restfulsoaprpcsoa%E5%BE%AE%E6%9C%8D%E5%8A%A1%E4%B9%8B%E9%97%B4%E7%9A%84%E5%8C%BA%E5%88%AB/</link>
      <pubDate>Sat, 16 May 2020 10:41:57 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84/restfulsoaprpcsoa%E5%BE%AE%E6%9C%8D%E5%8A%A1%E4%B9%8B%E9%97%B4%E7%9A%84%E5%8C%BA%E5%88%AB/</guid>
      <description>Restful Restful是一种架构设计风格，提供了设计原则和约束条件，而不是架构，而满足这些约束条件和原则的应用程序或设计就是 Restful架构或服</description>
    </item>
    
    <item>
      <title>Dubbo</title>
      <link>https://zsmhub.github.io/post/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84/dubbo/</link>
      <pubDate>Sat, 16 May 2020 10:15:48 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84/dubbo/</guid>
      <description>Dubbo 简介 Apache Dubbo (incubating) |ˈdʌbəʊ| 是开源的一款高性能、轻量级的开源 Java RPC 框架，它提供了三大核心能力：面向接口的远程方法调用，智能容错和负载均衡，以及</description>
    </item>
    
    <item>
      <title>大牛面试记录</title>
      <link>https://zsmhub.github.io/post/%E9%9D%A2%E8%AF%95%E5%BF%85%E5%A4%87/%E5%A4%A7%E7%89%9B%E9%9D%A2%E8%AF%95%E8%AE%B0%E5%BD%95/</link>
      <pubDate>Thu, 14 May 2020 09:23:17 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E9%9D%A2%E8%AF%95%E5%BF%85%E5%A4%87/%E5%A4%A7%E7%89%9B%E9%9D%A2%E8%AF%95%E8%AE%B0%E5%BD%95/</guid>
      <description>心得 本来想找PHP的，误打误撞发现广州的Golang和PHP混合用的公司还蛮多。 面试过程 看你简历里也有用过Go，Go和PHP在运行的时候有什</description>
    </item>
    
    <item>
      <title>记一下互联网术语</title>
      <link>https://zsmhub.github.io/post/%E7%A8%8B%E5%BA%8F%E5%91%98/%E8%AE%B0%E4%B8%80%E4%B8%8B%E4%BA%92%E8%81%94%E7%BD%91%E8%AF%8D/</link>
      <pubDate>Thu, 14 May 2020 09:12:26 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E7%A8%8B%E5%BA%8F%E5%91%98/%E8%AE%B0%E4%B8%80%E4%B8%8B%E4%BA%92%E8%81%94%E7%BD%91%E8%AF%8D/</guid>
      <description>编程常用单词 tmp/temp: 临时对象 startAt/endAt: 开始时间/结束时间 prev/next: 上一个/下一个 职位 PM(Product Manager): 产品经理 AM(Account Manager): 客户经理 RD(Research &amp;amp; Develop): 研发 FE(Front End): 前端 指标 DAU(Daily Active Users): 日活跃数 响应时间(RT) :</description>
    </item>
    
    <item>
      <title>Go Json 技巧</title>
      <link>https://zsmhub.github.io/post/golang/go%E4%B9%8Bjson%E6%8A%80%E5%B7%A7/</link>
      <pubDate>Tue, 12 May 2020 21:51:25 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/golang/go%E4%B9%8Bjson%E6%8A%80%E5%B7%A7/</guid>
      <description>omitempty 忽略 struct 空字段，当字段的值为空值的时候，它不会出现在JSON数据中. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 package main import ( &amp;#34;encoding/json&amp;#34; &amp;#34;fmt&amp;#34; ) type User struct { Email string `json:&amp;#34;email&amp;#34;` Password string</description>
    </item>
    
    <item>
      <title>Go 开发遇到的性能问题</title>
      <link>https://zsmhub.github.io/post/golang/go%E5%BC%80%E5%8F%91%E9%81%87%E5%88%B0%E7%9A%84%E6%80%A7%E8%83%BD%E9%97%AE%E9%A2%98/</link>
      <pubDate>Sat, 09 May 2020 14:32:23 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/golang/go%E5%BC%80%E5%8F%91%E9%81%87%E5%88%B0%E7%9A%84%E6%80%A7%E8%83%BD%E9%97%AE%E9%A2%98/</guid>
      <description>原生 json 包效率低 原因 原生 json 包主要是用到了reflect，所以比较慢，推荐优先使用 json-iterator 包解析 json。 代码分析 测试环境：macbook pro macos Go 版本:</description>
    </item>
    
    <item>
      <title>PHP注释规范</title>
      <link>https://zsmhub.github.io/post/php/php%E6%B3%A8%E9%87%8A%E8%A7%84%E8%8C%83/</link>
      <pubDate>Fri, 08 May 2020 08:51:58 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/php/php%E6%B3%A8%E9%87%8A%E8%A7%84%E8%8C%83/</guid>
      <description>函数/方法注释规范 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 /** * @param 定义函数或者方法的参数信息 * @return 定义函数或者方法的返回信息 * @throws 指明</description>
    </item>
    
    <item>
      <title>PHP 的一些坑</title>
      <link>https://zsmhub.github.io/post/php/php%E7%9A%84%E4%B8%80%E4%BA%9B%E5%9D%91/</link>
      <pubDate>Thu, 07 May 2020 16:00:02 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/php/php%E7%9A%84%E4%B8%80%E4%BA%9B%E5%9D%91/</guid>
      <description>大小写的坑 mysql5.7 查询不区分大小写。 php7.2 array_diff() 区分大小写，在不区分大小写的情况下取差集，应使用 array_udiff() 和 strcasecmp() 处理 示例：array_udiff([&amp;lsquo;a</description>
    </item>
    
    <item>
      <title>Mysql 主从复制延时案例</title>
      <link>https://zsmhub.github.io/post/database/mysql%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6%E5%BB%B6%E6%97%B6%E8%A7%A3%E5%86%B3%E6%A1%88%E4%BE%8B/</link>
      <pubDate>Thu, 07 May 2020 09:34:49 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/database/mysql%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6%E5%BB%B6%E6%97%B6%E8%A7%A3%E5%86%B3%E6%A1%88%E4%BE%8B/</guid>
      <description>MySQL 主从复制的延时一直是业界困扰已久的问题。延时的出现会降低主从读写分离的价值，不利于数据实时性较高的业务使用 MySQL。 如果主从复制之间出现</description>
    </item>
    
    <item>
      <title>Go 数组指针和指针数组的区别</title>
      <link>https://zsmhub.github.io/post/golang/go%E6%95%B0%E7%BB%84%E6%8C%87%E9%92%88%E5%92%8C%E6%8C%87%E9%92%88%E6%95%B0%E7%BB%84%E7%9A%84%E5%8C%BA%E5%88%AB/</link>
      <pubDate>Tue, 05 May 2020 14:13:30 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/golang/go%E6%95%B0%E7%BB%84%E6%8C%87%E9%92%88%E5%92%8C%E6%8C%87%E9%92%88%E6%95%B0%E7%BB%84%E7%9A%84%E5%8C%BA%E5%88%AB/</guid>
      <description>Golang中数组指针和指针数组区别 区别二者，字面上只看后两个字即可： 数组指针 ：它是一个指针，但是数据类型为数组，或者说指向数组 指针数组 ：它</description>
    </item>
    
    <item>
      <title>理解并发与并行</title>
      <link>https://zsmhub.github.io/post/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/%E7%90%86%E8%A7%A3%E5%B9%B6%E5%8F%91%E4%B8%8E%E5%B9%B6%E8%A1%8C/</link>
      <pubDate>Mon, 04 May 2020 18:15:11 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/%E7%90%86%E8%A7%A3%E5%B9%B6%E5%8F%91%E4%B8%8E%E5%B9%B6%E8%A1%8C/</guid>
      <description>并发与并行 例子 你吃饭吃到一半，电话来了，你一直到吃完了以后才去接，这就说明你不支持并发也不支持并行。 你吃饭吃到一半，电话来了，你停了下来接了</description>
    </item>
    
    <item>
      <title>Hugo 使用教程</title>
      <link>https://zsmhub.github.io/post/%E5%8D%9A%E5%AE%A2/hugo%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</link>
      <pubDate>Sun, 03 May 2020 20:45:07 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E5%8D%9A%E5%AE%A2/hugo%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</guid>
      <description>Hugo 是什么 静态网站生成器 Hugo只有一个二进制文件（比如Windows里只是一个hugo.exe） Hugo可以将你写好的MarkDown格式的</description>
    </item>
    
    <item>
      <title>IM-心跳机制</title>
      <link>https://zsmhub.github.io/post/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/im-%E5%BF%83%E8%B7%B3%E6%9C%BA%E5%88%B6/</link>
      <pubDate>Fri, 17 Apr 2020 20:56:26 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/im-%E5%BF%83%E8%B7%B3%E6%9C%BA%E5%88%B6/</guid>
      <description>作为即时通讯应用，心跳机制是其网络通信技术底层中非常重要的一环，有没有心跳机制、心跳机制的算法实现好坏，都将直接影响即时通讯应用在应用层的表</description>
    </item>
    
    <item>
      <title>IM-基础知识</title>
      <link>https://zsmhub.github.io/post/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/im-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</link>
      <pubDate>Thu, 16 Apr 2020 20:53:50 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/im-%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</guid>
      <description>IM 消息可靠性及一致性的解决方案 参考文章 对于 IM 系统消息可靠性及一致性问题，通过消息重发机制保证消息成功被服务端接收，通过会话记录检查保证收取消</description>
    </item>
    
    <item>
      <title>数据传输方式汇总</title>
      <link>https://zsmhub.github.io/post/%E5%90%8E%E7%AB%AF/%E6%95%B0%E6%8D%AE%E4%BC%A0%E8%BE%93%E6%96%B9%E5%BC%8F%E6%B1%87%E6%80%BB/</link>
      <pubDate>Fri, 10 Apr 2020 15:02:25 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E5%90%8E%E7%AB%AF/%E6%95%B0%E6%8D%AE%E4%BC%A0%E8%BE%93%E6%96%B9%E5%BC%8F%E6%B1%87%E6%80%BB/</guid>
      <description>json JSON是一种更轻量级的基于文本的编码方式，经常用在client/server端的通讯中。 yaml YAML类似JSON，新的特性更强大，更适合人</description>
    </item>
    
    <item>
      <title>Mysql 基础知识二</title>
      <link>https://zsmhub.github.io/post/database/mysql%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E4%BA%8C/</link>
      <pubDate>Fri, 03 Apr 2020 22:45:33 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/database/mysql%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E4%BA%8C/</guid>
      <description>一、基础知识 表存储引擎必须用InnoDB 字符集必须使用utf8mb4 （utf8不是真utf8） 禁止使用存储过程、视图、触发器、Event 命名</description>
    </item>
    
    <item>
      <title>Iris 框架</title>
      <link>https://zsmhub.github.io/post/golang/%E6%A1%86%E6%9E%B6-iris%E6%A1%86%E6%9E%B6/</link>
      <pubDate>Wed, 01 Apr 2020 22:02:25 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/golang/%E6%A1%86%E6%9E%B6-iris%E6%A1%86%E6%9E%B6/</guid>
      <description>Iris 简介 Iris 是一个拥有 MVC 架构模式的 Go Web 框架。 Iris 以简单而强大的api而闻名。 除了 Iris 为您提供的低级访问权限。 Iris 为您提供构建面向服务的应用程序的结构。</description>
    </item>
    
    <item>
      <title>Golang 面试题</title>
      <link>https://zsmhub.github.io/post/%E9%9D%A2%E8%AF%95%E5%BF%85%E5%A4%87/golang%E9%9D%A2%E8%AF%95%E9%A2%98/</link>
      <pubDate>Sun, 22 Mar 2020 09:22:50 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E9%9D%A2%E8%AF%95%E5%BF%85%E5%A4%87/golang%E9%9D%A2%E8%AF%95%E9%A2%98/</guid>
      <description>常见问题 垃圾回收、内存模型、内存调优、并发 参考文章 go语言面试题 Golang面试问题汇总</description>
    </item>
    
    <item>
      <title>Go 基础知识</title>
      <link>https://zsmhub.github.io/post/golang/go%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</link>
      <pubDate>Sun, 15 Mar 2020 17:46:46 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/golang/go%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</guid>
      <description>Go 简介 Go 语言起源 2007 年，并于 2009 年正式对外发布，其是谷歌公司的一个开源项目。Go 语言并不是凭空而造的，而是和 C++、Java 和 C# 一样属于 C 系。 Go</description>
    </item>
    
    <item>
      <title>队列与栈</title>
      <link>https://zsmhub.github.io/post/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%92%8C%E7%AE%97%E6%B3%95/%E9%98%9F%E5%88%97%E4%B8%8E%E6%A0%88/</link>
      <pubDate>Sun, 01 Mar 2020 21:33:03 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%92%8C%E7%AE%97%E6%B3%95/%E9%98%9F%E5%88%97%E4%B8%8E%E6%A0%88/</guid>
      <description>队列 1 2 3 4 5 6 7 8 9 10 # 队列：FIFO即First in First Out,先进先出 from queue import Queue q = Queue() for i in range(5): q.put(i) while not q.empty(): print(q.get()) 栈 1 2 3 4 5 6 7 8 9 10 # 栈：LIFO</description>
    </item>
    
    <item>
      <title>经典案例</title>
      <link>https://zsmhub.github.io/post/%E9%9D%A2%E8%AF%95%E5%BF%85%E5%A4%87/%E7%BB%8F%E5%85%B8%E6%A1%88%E4%BE%8B/</link>
      <pubDate>Fri, 21 Feb 2020 22:28:05 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E9%9D%A2%E8%AF%95%E5%BF%85%E5%A4%87/%E7%BB%8F%E5%85%B8%E6%A1%88%E4%BE%8B/</guid>
      <description>php vs go php 优点 array 结构无所不能，很强大 php 缺点 弱类型语言，同样的逻辑，写法过于多样，导致后期维护成本高。比如参数可定义可不定义，返回值可定义可不定</description>
    </item>
    
    <item>
      <title>SQL 面试题</title>
      <link>https://zsmhub.github.io/post/%E9%9D%A2%E8%AF%95%E5%BF%85%E5%A4%87/sql%E9%9D%A2%E8%AF%95%E9%A2%98/</link>
      <pubDate>Fri, 21 Feb 2020 09:11:06 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E9%9D%A2%E8%AF%95%E5%BF%85%E5%A4%87/sql%E9%9D%A2%E8%AF%95%E9%A2%98/</guid>
      <description>SQL 问题总结文章 MySQL 三万字精华总结 + 面试100 问，吊打面试官绰绰有余 面试题 假如有个公司，员工每天上班需要签到一次，要列出每个员工上周的签到率，用</description>
    </item>
    
    <item>
      <title>设计模式</title>
      <link>https://zsmhub.github.io/post/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%92%8C%E7%AE%97%E6%B3%95/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Sat, 15 Feb 2020 21:05:40 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%92%8C%E7%AE%97%E6%B3%95/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</guid>
      <description>设计模式简介 设计模式一套被反复使用，多数人知晓的代码设计经验的总结，实现可重用代码，使代码更容易被理解，保证代码可靠性。 总体来说，设计模式分</description>
    </item>
    
    <item>
      <title>面试汇总</title>
      <link>https://zsmhub.github.io/post/%E9%9D%A2%E8%AF%95%E5%BF%85%E5%A4%87/%E9%9D%A2%E8%AF%95%E6%B1%87%E6%80%BB/</link>
      <pubDate>Sun, 09 Feb 2020 09:43:27 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E9%9D%A2%E8%AF%95%E5%BF%85%E5%A4%87/%E9%9D%A2%E8%AF%95%E6%B1%87%E6%80%BB/</guid>
      <description>题库 2019年最新总结，阿里，腾讯，百度，美团，头条等技术面试题目，以及答案，专家出题人分析汇总 参考原文 如何避坑公司 话说正规的公司是怎么样的</description>
    </item>
    
    <item>
      <title>中高级PHP面试题</title>
      <link>https://zsmhub.github.io/post/%E9%9D%A2%E8%AF%95%E5%BF%85%E5%A4%87/%E4%B8%AD%E9%AB%98%E7%BA%A7php%E9%9D%A2%E8%AF%95%E9%A2%98/</link>
      <pubDate>Sun, 09 Feb 2020 09:28:00 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E9%9D%A2%E8%AF%95%E5%BF%85%E5%A4%87/%E4%B8%AD%E9%AB%98%E7%BA%A7php%E9%9D%A2%E8%AF%95%E9%A2%98/</guid>
      <description>前言 定位大概是中高级，这个阶段主要考察的是原理相关的东西，语法层面几乎不会问。 建议不要去背面试题，因为大部分问题都会追问，是不是理解了一问就</description>
    </item>
    
    <item>
      <title>AB压力测试</title>
      <link>https://zsmhub.github.io/post/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/ab%E5%8E%8B%E5%8A%9B%E6%B5%8B%E8%AF%95/</link>
      <pubDate>Fri, 10 Jan 2020 21:01:48 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/ab%E5%8E%8B%E5%8A%9B%E6%B5%8B%E8%AF%95/</guid>
      <description>ApacheBench 是 Apache 服务器自带的一个web压力测试工具，简称ab。ab又是一个命令行工具，对发起负载的本机要求很低，根据ab命令可以创建很多的并发访问线程</description>
    </item>
    
    <item>
      <title>软件测试分类</title>
      <link>https://zsmhub.github.io/post/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%88%86%E7%B1%BB/</link>
      <pubDate>Mon, 06 Jan 2020 20:54:06 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%88%86%E7%B1%BB/</guid>
      <description>在软件测试中UT，IT，ST，UAT指单元测试，集成测试，系统测试 ，用户接受测试。 UT-单元测试 Unit Test 单元测试任务包括： 1、模块接口测试； 2、</description>
    </item>
    
    <item>
      <title>了解版本号</title>
      <link>https://zsmhub.github.io/post/%E7%A8%8B%E5%BA%8F%E5%91%98/%E4%BA%86%E8%A7%A3%E7%89%88%E6%9C%AC%E5%8F%B7/</link>
      <pubDate>Wed, 01 Jan 2020 15:59:09 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E7%A8%8B%E5%BA%8F%E5%91%98/%E4%BA%86%E8%A7%A3%E7%89%88%E6%9C%AC%E5%8F%B7/</guid>
      <description>版本号迭代规则 系统重构：主版本号+1 新增功能：次版本号+1 BUG修复：修订号+1 常见案例 版本号的规范可采用很多公司采用的这套：http://</description>
    </item>
    
    <item>
      <title>Excel 使用总结</title>
      <link>https://zsmhub.github.io/post/ide/excel/</link>
      <pubDate>Tue, 31 Dec 2019 21:13:49 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/ide/excel/</guid>
      <description>excel怎么删除空白单元格，就是右边的数据往左移动，填补空白单元格？ 答：选上数据区域，ctrl+G-&amp;gt;定位条件-空值，这时区域内所有</description>
    </item>
    
    <item>
      <title>Vim</title>
      <link>https://zsmhub.github.io/post/ide/vim/</link>
      <pubDate>Tue, 31 Dec 2019 20:53:44 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/ide/vim/</guid>
      <description>Vim 的 6 种模式 一般模式、编辑模式、命令模式、可视化模式、替换模式(R)、Ex模式。 在可视化模式下，可以对一个文本块的整体进行操作。例如，首先高</description>
    </item>
    
    <item>
      <title>接口对接安全性方案</title>
      <link>https://zsmhub.github.io/post/web%E5%AE%89%E5%85%A8/%E6%8E%A5%E5%8F%A3%E5%AF%B9%E6%8E%A5%E5%AE%89%E5%85%A8%E6%80%A7%E6%96%B9%E6%A1%88/</link>
      <pubDate>Wed, 25 Dec 2019 21:44:01 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/web%E5%AE%89%E5%85%A8/%E6%8E%A5%E5%8F%A3%E5%AF%B9%E6%8E%A5%E5%AE%89%E5%85%A8%E6%80%A7%E6%96%B9%E6%A1%88/</guid>
      <description>接口对接安全性方案 鉴权（authentication）是指验证用户是否拥有访问系统的权利。 建立访问IP白名单 可以在nginx上配置只允许某些</description>
    </item>
    
    <item>
      <title>算法时间复杂度</title>
      <link>https://zsmhub.github.io/post/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%92%8C%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6/</link>
      <pubDate>Wed, 04 Dec 2019 21:51:34 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%92%8C%E7%AE%97%E6%B3%95/%E7%AE%97%E6%B3%95%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6/</guid>
      <description>算法复杂度 算法复杂度分为时间复杂度和空间复杂度。其作用： 时间复杂度是指执行这个算法所需要的计算工作量； 空间复杂度是指执行这个算法所需要的内存</description>
    </item>
    
    <item>
      <title>时间单位</title>
      <link>https://zsmhub.github.io/post/other/%E6%97%B6%E9%97%B4%E5%8D%95%E4%BD%8D/</link>
      <pubDate>Sat, 23 Nov 2019 21:40:00 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/other/%E6%97%B6%E9%97%B4%E5%8D%95%E4%BD%8D/</guid>
      <description>秒、毫秒、微秒、纳秒 10位数的时间戳是以 秒 为单位； 13位数的时间戳是以 毫秒 为单位； 16位数的时间戳是以 微秒 为单位； 19位数的时间戳是以 纳秒 为</description>
    </item>
    
    <item>
      <title>动态追踪技术</title>
      <link>https://zsmhub.github.io/post/%E5%90%8E%E7%AB%AF/%E5%8A%A8%E6%80%81%E8%BF%BD%E8%B8%AA%E6%8A%80%E6%9C%AF/</link>
      <pubDate>Sun, 10 Nov 2019 16:06:01 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E5%90%8E%E7%AB%AF/%E5%8A%A8%E6%80%81%E8%BF%BD%E8%B8%AA%E6%8A%80%E6%9C%AF/</guid>
      <description>简介 动态追踪技术通常是基于操作系统内核来实现的。是一种调试技术。 作用 用于排查线上出现的诡异问题，如网站运行缓慢、超时、CPU占用率高 优点 动态</description>
    </item>
    
    <item>
      <title>Supervisor</title>
      <link>https://zsmhub.github.io/post/%E5%90%8E%E7%AB%AF/supervisor/</link>
      <pubDate>Sat, 05 Oct 2019 15:15:06 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E5%90%8E%E7%AB%AF/supervisor/</guid>
      <description>安装 brew install supervisor 安装完成后会有如下几个命令工具 supervisord，运行 Supervisor 时会启动一个进程 supervisord，它负责启动所管理的进程，并将所</description>
    </item>
    
    <item>
      <title>Git 基础知识</title>
      <link>https://zsmhub.github.io/post/%E5%90%8E%E7%AB%AF/git%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</link>
      <pubDate>Wed, 02 Oct 2019 21:05:31 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E5%90%8E%E7%AB%AF/git%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</guid>
      <description>Git 简介 版本控制工具，分布式版本控制系统 git commit 注释标记 参考文章 feat: 添加新功能 fix: 修复bug refactor: 代码重构，没有加新功能(即不是新增功能，也不是修改 bug 的代</description>
    </item>
    
    <item>
      <title>Laravel 定时任务与常驻进程</title>
      <link>https://zsmhub.github.io/post/php/laravel%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1%E4%B8%8E%E5%B8%B8%E9%A9%BB%E8%BF%9B%E7%A8%8B/</link>
      <pubDate>Wed, 04 Sep 2019 14:28:22 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/php/laravel%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1%E4%B8%8E%E5%B8%B8%E9%A9%BB%E8%BF%9B%E7%A8%8B/</guid>
      <description>任务调度功能 Laravel 命令行调度器允许你在 Laravel 中对命令调度进行清晰流畅的定义。且使用这个任务调度器时，你只需要在你的服务器上创建单个 Cron 入口接口。你的任</description>
    </item>
    
    <item>
      <title>Mysql 事务和锁</title>
      <link>https://zsmhub.github.io/post/database/mysql%E4%BA%8B%E5%8A%A1%E5%92%8C%E9%94%81/</link>
      <pubDate>Sun, 01 Sep 2019 17:12:23 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/database/mysql%E4%BA%8B%E5%8A%A1%E5%92%8C%E9%94%81/</guid>
      <description>事务是必须满足4个条件（ACID） A (Atomicity) 原子性：整个事务中的所有操作，要么全部完成，要么全部不完成，不可能停滞在中间某个环节。事务在执行过程中</description>
    </item>
    
    <item>
      <title>Laravel 常用组件</title>
      <link>https://zsmhub.github.io/post/php/laravel%E5%B8%B8%E7%94%A8%E7%BB%84%E4%BB%B6/</link>
      <pubDate>Thu, 01 Aug 2019 14:15:47 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/php/laravel%E5%B8%B8%E7%94%A8%E7%BB%84%E4%BB%B6/</guid>
      <description>dingo/api dingo/api 是一个 Lumen 和 Laravel 都可用的 RestFul 工具包，帮助我们快速的开始构建 RestFul Api。 1 2 composer require dingo/api php artisan vendor:publish --provider=&amp;#34;Dingo\Api\Provider\LaravelServiceProvider&amp;#34; 注意点： 由于路由被 DingoApi 接管了，如果将来部署上线后你需要缓存</description>
    </item>
    
    <item>
      <title>Laravel 基础知识</title>
      <link>https://zsmhub.github.io/post/php/laravel%E5%85%A5%E9%97%A8/</link>
      <pubDate>Thu, 01 Aug 2019 13:50:49 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/php/laravel%E5%85%A5%E9%97%A8/</guid>
      <description>php 框架运行的核心三步 从入口进入 index.php 解析 url，匹配路由 根据路由，调用控制器，渲染视图 tip: 在第一步到第二步之间，会有更多的操作。比如自动加载，容器</description>
    </item>
    
    <item>
      <title>黑客入侵</title>
      <link>https://zsmhub.github.io/post/web%E5%AE%89%E5%85%A8/%E9%BB%91%E5%AE%A2%E5%85%A5%E4%BE%B5/</link>
      <pubDate>Tue, 16 Jul 2019 15:55:54 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/web%E5%AE%89%E5%85%A8/%E9%BB%91%E5%AE%A2%E5%85%A5%E4%BE%B5/</guid>
      <description>前提 网站被黑首先要检查搜索引擎页面收录情况，很多网站被黑页面会被修改标题后跳转，黑客通过挂马跳转到自己的网站，被跳转的页面已博彩和色情网站居</description>
    </item>
    
    <item>
      <title>高并发处理</title>
      <link>https://zsmhub.github.io/post/%E5%90%8E%E7%AB%AF/%E9%AB%98%E5%B9%B6%E5%8F%91%E5%A4%84%E7%90%86/</link>
      <pubDate>Sat, 06 Jul 2019 13:32:31 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E5%90%8E%E7%AB%AF/%E9%AB%98%E5%B9%B6%E5%8F%91%E5%A4%84%E7%90%86/</guid>
      <description>高并发之问题描述 某天A君突然发现自己的接口请求量突然涨到之前的10倍，没多久该接口几乎不可使用，并引发连锁反应导致整个系统崩溃。如何应对这种</description>
    </item>
    
    <item>
      <title>NoSQL 简单了解</title>
      <link>https://zsmhub.github.io/post/database/nosql%E7%AE%80%E5%8D%95%E4%BA%86%E8%A7%A3/</link>
      <pubDate>Sat, 29 Jun 2019 20:02:31 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/database/nosql%E7%AE%80%E5%8D%95%E4%BA%86%E8%A7%A3/</guid>
      <description>NoSQL 数据库与传统的关系型数据库相比，它具有操作简单、完全免费、源码公开、随时下载等特点，并可以用于各种商业目的。 这使 NoSQL 产品广泛应用于各种大型门</description>
    </item>
    
    <item>
      <title>Vscode</title>
      <link>https://zsmhub.github.io/post/ide/vscode/</link>
      <pubDate>Wed, 19 Jun 2019 21:04:16 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/ide/vscode/</guid>
      <description>常用快捷键 cmd+P: 打开命令面板 直接输入文件名，跳转到文件 ? 列出当前可执行的动作 : 跳转到行数，也可以 Cmd+G 直接进入 &amp;gt; 显示并运行命令 @ 函数名跳转 光标『多点</description>
    </item>
    
    <item>
      <title>SonarQube 代码质量管理平台</title>
      <link>https://zsmhub.github.io/post/%E5%90%8E%E7%AB%AF/sonarqube-%E4%BB%A3%E7%A0%81%E8%B4%A8%E9%87%8F%E7%AE%A1%E7%90%86%E5%B9%B3%E5%8F%B0/</link>
      <pubDate>Sat, 15 Jun 2019 15:06:48 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E5%90%8E%E7%AB%AF/sonarqube-%E4%BB%A3%E7%A0%81%E8%B4%A8%E9%87%8F%E7%AE%A1%E7%90%86%E5%B9%B3%E5%8F%B0/</guid>
      <description>SonarLint 与 SonarQube SonarLint 仅存在于 IDE（IntelliJ，Eclipse 和 Visual Studio）中。 其目的是在您键入代码时提供即时反馈。 为此，它专注于您要添加或更</description>
    </item>
    
    <item>
      <title>PHP 常用函数</title>
      <link>https://zsmhub.github.io/post/php/php%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/</link>
      <pubDate>Mon, 03 Jun 2019 19:02:58 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/php/php%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0/</guid>
      <description>时间函数 常用代码 1 2 3 4 5 6 7 8 9 10 11 date_default_timezone_set(&amp;#39;PRC&amp;#39;); //默认时区 echo &amp;#34;今天:&amp;#34;,date(&amp;#34;Y-m-d&amp;#34;,time()),</description>
    </item>
    
    <item>
      <title>Mysql 优化</title>
      <link>https://zsmhub.github.io/post/database/mysql%E4%BC%98%E5%8C%96/</link>
      <pubDate>Sat, 01 Jun 2019 16:54:37 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/database/mysql%E4%BC%98%E5%8C%96/</guid>
      <description>慢查询优化 根据 where 条件，组建联合索引『每一次查询只能用上一个索引，所以需要好好利用联合索引』 使用强制索引，使用 explain 分析查询 sql 时，需要关注 key、</description>
    </item>
    
    <item>
      <title>持续集成工作流</title>
      <link>https://zsmhub.github.io/post/%E5%90%8E%E7%AB%AF/%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90%E5%B7%A5%E4%BD%9C%E6%B5%81/</link>
      <pubDate>Mon, 27 May 2019 13:41:28 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E5%90%8E%E7%AB%AF/%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90%E5%B7%A5%E4%BD%9C%E6%B5%81/</guid>
      <description>互联网软件的开发和发布，已经形成了一套标准流程。 持续集成 持续集成（Continuous integration，简称CI）指的是，频繁地（一天</description>
    </item>
    
    <item>
      <title>Restful架构</title>
      <link>https://zsmhub.github.io/post/%E5%90%8E%E7%AB%AF/restful%E6%9E%B6%E6%9E%84/</link>
      <pubDate>Wed, 01 May 2019 15:44:01 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E5%90%8E%E7%AB%AF/restful%E6%9E%B6%E6%9E%84/</guid>
      <description>什么是RESTful架构 用 URL 定位资源，用 HTTP 动词描述操作 每一个URI代表一种资源； 客户端和服务器之间，传递这种资源的某种表现层； 客户端通过五个</description>
    </item>
    
    <item>
      <title>DevOps 与 NoOps</title>
      <link>https://zsmhub.github.io/post/%E5%90%8E%E7%AB%AF/devops%E4%B8%8Enoops/</link>
      <pubDate>Mon, 29 Apr 2019 21:17:55 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E5%90%8E%E7%AB%AF/devops%E4%B8%8Enoops/</guid>
      <description>DevOps DevOps是开发和运维的融合，是开发和运维工程师共同协作，定义应用从设计到交付全生命周期过程的实践。 NoOps NoOps的意思是无须操作。它的理</description>
    </item>
    
    <item>
      <title>Socket &amp;&amp; WebSocket</title>
      <link>https://zsmhub.github.io/post/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/socket%E5%92%8Cwebsocket/</link>
      <pubDate>Sun, 28 Apr 2019 16:22:13 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/socket%E5%92%8Cwebsocket/</guid>
      <description>一般网络编程都叫Socket编程，网络编程通常采用的是经典的客户端-服务器模型(CS 模型)。 网络编程无非简单来看就是 TCP编程 和 UDP编程。</description>
    </item>
    
    <item>
      <title>TCP/IP</title>
      <link>https://zsmhub.github.io/post/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/tcp-ip/</link>
      <pubDate>Sun, 28 Apr 2019 11:30:44 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/tcp-ip/</guid>
      <description>协议的概念 从应用的角度出发，协议可理解为『规则』，是数据传输和数据解释的规则。 OSI 参考模型和 TCP/IP 协议 网络分层架构目的：为了减少协议设计的复杂性，</description>
    </item>
    
    <item>
      <title>OAuth 与 OpenID</title>
      <link>https://zsmhub.github.io/post/%E5%90%8E%E7%AB%AF/oauth%E4%B8%8Eopenid/</link>
      <pubDate>Wed, 17 Apr 2019 15:23:38 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E5%90%8E%E7%AB%AF/oauth%E4%B8%8Eopenid/</guid>
      <description>概念 开放授权（OAuth）是一个开放标准，允许用户让第三方应用访问该用户在某一网站上存储的私密的资源（如照片，视频，联系人列表），而无需将用</description>
    </item>
    
    <item>
      <title>Composer</title>
      <link>https://zsmhub.github.io/post/php/composer/</link>
      <pubDate>Wed, 03 Apr 2019 21:50:58 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/php/composer/</guid>
      <description>pear pear: 全称为PHP扩展与应用库(PHP Extension and Application Repository)。为了创建一个类似于Perl CPAN档案的工具 phar: php档案包 Composer 概念：用来管理</description>
    </item>
    
    <item>
      <title>SQL Server 基础知识</title>
      <link>https://zsmhub.github.io/post/database/sqlserver%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</link>
      <pubDate>Thu, 28 Mar 2019 20:19:28 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/database/sqlserver%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</guid>
      <description>SQL Server SQL Server 是由微软公司（Microsoft）开发的关系型数据库（RDBMS）。 SQL Server 主要是和 MySQL 和 Oracle 二者竞争。 系统数据库（System Databa</description>
    </item>
    
    <item>
      <title>PHP 面向对象编程</title>
      <link>https://zsmhub.github.io/post/php/php%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B/</link>
      <pubDate>Sat, 09 Mar 2019 13:22:34 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/php/php%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B/</guid>
      <description>PHP开发中常用的代码复用有继承(extend)、多态(interface)、trait（性状）。 OOP（Object Oriented Programmin</description>
    </item>
    
    <item>
      <title>Python 进程、线程和协程</title>
      <link>https://zsmhub.github.io/post/python/python%E8%BF%9B%E7%A8%8B-%E7%BA%BF%E7%A8%8B-%E5%8D%8F%E7%A8%8B/</link>
      <pubDate>Sat, 02 Mar 2019 11:08:07 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/python/python%E8%BF%9B%E7%A8%8B-%E7%BA%BF%E7%A8%8B-%E5%8D%8F%E7%A8%8B/</guid>
      <description>基本概念 什么叫“多任务”呢？简单地说，就是操作系统可以同时运行多个任务。 无论多线程和多进程，IO的调度更多取决于系统，而协程的方式，调度来自</description>
    </item>
    
    <item>
      <title>前端开发</title>
      <link>https://zsmhub.github.io/post/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/</link>
      <pubDate>Fri, 01 Mar 2019 11:01:18 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E5%89%8D%E7%AB%AF/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/</guid>
      <description>Sass 与 Less Sass背景 CSS 不是编程语言，虽然可以用它来开发网页样式，但是没有办法用它编程。SASS 的出现，让 CSS 实现了通过代码编程的方式来实现。 SASS 是</description>
    </item>
    
    <item>
      <title>Opcache与Opcode</title>
      <link>https://zsmhub.github.io/post/php/opcache%E4%B8%8Eopcode/</link>
      <pubDate>Sat, 23 Feb 2019 13:10:09 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/php/opcache%E4%B8%8Eopcode/</guid>
      <description>相关文章 Opcode是啥以及如何使用好Opcache 啥是Opcache Opcache 的前生是 Optimizer+ ，它是PHP的官方公司 Zend 开发的一款闭源但可以免费使用的 PHP 优</description>
    </item>
    
    <item>
      <title>Python 常用的 package 和 module</title>
      <link>https://zsmhub.github.io/post/python/python%E5%B8%B8%E7%94%A8%E7%9A%84package%E5%92%8Cmodule/</link>
      <pubDate>Fri, 15 Feb 2019 10:05:13 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/python/python%E5%B8%B8%E7%94%A8%E7%9A%84package%E5%92%8Cmodule/</guid>
      <description>简介 Python 是通过 module 组织代码的，一个 py 文件就是一个 module，module 又是通过 package 来组织的，package 是一个包含 init.py 的文件夹，代码，modu</description>
    </item>
    
    <item>
      <title>Python 基础知识</title>
      <link>https://zsmhub.github.io/post/python/python%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</link>
      <pubDate>Wed, 06 Feb 2019 10:05:13 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/python/python%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</guid>
      <description>python 简介 在Python中，代码不是越多越好，而是越少越好。代码不是越复杂越好，而是越简单越好。请始终牢记，代码越少，开发效率越高。 越低级的语言</description>
    </item>
    
    <item>
      <title>Python学习汇总</title>
      <link>https://zsmhub.github.io/post/python/python%E5%AD%A6%E4%B9%A0%E6%B1%87%E6%80%BB/</link>
      <pubDate>Wed, 06 Feb 2019 09:57:29 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/python/python%E5%AD%A6%E4%B9%A0%E6%B1%87%E6%80%BB/</guid>
      <description>学习资料 Python 3教程-廖雪峰 Python初学者书籍、视频、资料、社区推荐</description>
    </item>
    
    <item>
      <title>k8s简介</title>
      <link>https://zsmhub.github.io/post/docker/docker-k8s/</link>
      <pubDate>Fri, 01 Feb 2019 14:36:09 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/docker/docker-k8s/</guid>
      <description>k8s 简介 Kubernetes是一个开源的，用于管理云平台中多个主机上的容器化的应用，Kubernetes的目标是让部署容器化的应用简单并且高效</description>
    </item>
    
    <item>
      <title>docker-compose</title>
      <link>https://zsmhub.github.io/post/docker/docker-compose/</link>
      <pubDate>Fri, 01 Feb 2019 14:13:09 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/docker/docker-compose/</guid>
      <description>简介 参考文章 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64</description>
    </item>
    
    <item>
      <title>Docker 基础知识</title>
      <link>https://zsmhub.github.io/post/docker/docker%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</link>
      <pubDate>Fri, 01 Feb 2019 14:12:09 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/docker/docker%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</guid>
      <description>docker 简介 2013年3月20日发布Docker0.1 如何定义Docker？ Docker 是一个承载和驱动容器的。Docker 是一个重新定义了程序开发测试、交</description>
    </item>
    
    <item>
      <title>黑白灰盒测试简介</title>
      <link>https://zsmhub.github.io/post/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/%E9%BB%91%E7%99%BD%E7%81%B0%E7%9B%92%E6%B5%8B%E8%AF%95%E7%AE%80%E4%BB%8B/</link>
      <pubDate>Wed, 30 Jan 2019 22:02:20 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95/%E9%BB%91%E7%99%BD%E7%81%B0%E7%9B%92%E6%B5%8B%E8%AF%95%E7%AE%80%E4%BB%8B/</guid>
      <description>黑盒测试 黑盒测试也称功能测试或数据驱动测试，它是在已知产品所应具有的功能，通过测试来检测每个功能是否都能正常使用，在测试时，把程序看作一个不</description>
    </item>
    
    <item>
      <title>开发者须知</title>
      <link>https://zsmhub.github.io/post/%E7%A8%8B%E5%BA%8F%E5%91%98/%E5%BC%80%E5%8F%91%E8%80%85%E9%A1%BB%E7%9F%A5/</link>
      <pubDate>Fri, 25 Jan 2019 15:42:14 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E7%A8%8B%E5%BA%8F%E5%91%98/%E5%BC%80%E5%8F%91%E8%80%85%E9%A1%BB%E7%9F%A5/</guid>
      <description>开发过程：SOLID五大设计原则 S.O.L.I.D 是面向对象设计(OOD)和面向对象编程(OOP)中的几个重要编码原则(Programming Pricipl</description>
    </item>
    
    <item>
      <title>Mysql 基础知识一</title>
      <link>https://zsmhub.github.io/post/database/mysql%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E4%B8%80/</link>
      <pubDate>Wed, 09 Jan 2019 22:13:42 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/database/mysql%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E4%B8%80/</guid>
      <description>常用函数 数据库表的时间戳字段设计，建议使用 int64 类型 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 # 日期 date_format(&amp;#39;2019-12-12 12:22:33&amp;#39;, &amp;#34;%Y-%m-%d&amp;#34;) -- 日期格式化</description>
    </item>
    
    <item>
      <title>Memcached</title>
      <link>https://zsmhub.github.io/post/database/memcached/</link>
      <pubDate>Fri, 04 Jan 2019 22:43:26 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/database/memcached/</guid>
      <description>Memcached 是一个自由开源的，高性能，分布式内存对象缓存系统。 Memcached 是一种基于内存的 key-value 存储，用来存储小块的任意数据（字符串、对象）。 Memcached 官方网站：http:</description>
    </item>
    
    <item>
      <title>Redis</title>
      <link>https://zsmhub.github.io/post/database/redis/</link>
      <pubDate>Thu, 03 Jan 2019 22:38:49 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/database/redis/</guid>
      <description>缓存分类 众所周知，不同的缓存速度是不同的，本地内存缓存 &amp;gt; redis/memcache &amp;gt; 磁盘缓存。 PHP 可以使用静态变量（如 array）实现本地内存缓存，Golang 可以使</description>
    </item>
    
    <item>
      <title>加密算法</title>
      <link>https://zsmhub.github.io/post/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%92%8C%E7%AE%97%E6%B3%95/%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95/</link>
      <pubDate>Wed, 02 Jan 2019 21:45:06 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%92%8C%E7%AE%97%E6%B3%95/%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95/</guid>
      <description>对称加密算法 AES 高级加密标准（Advanced Encryption Standard，AES），在密码学中又称Rijndael 加密法，是美国联邦政府采用的一种区块</description>
    </item>
    
    <item>
      <title>常用算法</title>
      <link>https://zsmhub.github.io/post/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%92%8C%E7%AE%97%E6%B3%95/%E5%B8%B8%E7%94%A8%E7%AE%97%E6%B3%95/</link>
      <pubDate>Wed, 02 Jan 2019 21:39:19 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%92%8C%E7%AE%97%E6%B3%95/%E5%B8%B8%E7%94%A8%E7%AE%97%E6%B3%95/</guid>
      <description>常见算法 快速排序，二分法查找，深度优先搜索，广度优先搜索 区间重合算法 时间重合判断逻辑： 开始时间s1、s2 结束时间e1、e2 只要满足s1 &amp;lt;= e2 &amp;amp;&amp;amp;</description>
    </item>
    
    <item>
      <title>Web 安全攻防总结</title>
      <link>https://zsmhub.github.io/post/web%E5%AE%89%E5%85%A8/web%E5%AE%89%E5%85%A8%E6%94%BB%E9%98%B2%E6%80%BB%E7%BB%93/</link>
      <pubDate>Wed, 02 Jan 2019 17:25:01 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/web%E5%AE%89%E5%85%A8/web%E5%AE%89%E5%85%A8%E6%94%BB%E9%98%B2%E6%80%BB%E7%BB%93/</guid>
      <description>XSS（跨站攻击） XSS 种类 Reflected XSS: 非持久型 XSS 漏洞，也叫反射型 XSS 漏洞，一般是通过给别人发送带有恶意脚本代码参数的 URL，当 URL 地址被打开时，特有的恶意</description>
    </item>
    
    <item>
      <title>Linux 基础知识</title>
      <link>https://zsmhub.github.io/post/%E6%9C%8D%E5%8A%A1%E5%99%A8/linux%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</link>
      <pubDate>Tue, 01 Jan 2019 17:32:56 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/%E6%9C%8D%E5%8A%A1%E5%99%A8/linux%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</guid>
      <description>基本命令 hostname -i: 查看服务器本地IP find: find是最常见和最强大的查找命令，你可以用它找到任何你想找的文件 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 # fi</description>
    </item>
    
    <item>
      <title>PHP 开发环境之 Lnmp</title>
      <link>https://zsmhub.github.io/post/php/lnmp%E7%9F%A5%E8%AF%86/</link>
      <pubDate>Tue, 01 Jan 2019 13:55:39 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/php/lnmp%E7%9F%A5%E8%AF%86/</guid>
      <description>Install Linux 一键搭建 Lnmp 环境 1 2 # 教程 https://github.com/licess/lnmp OR https://lnmp.org MacOs 一键搭建 Lnmp 环境 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 # 教程 https://github.com/yeszao/dnmp # 常用命令 $ cd ~/dnmp $ docker-compose build # 镜像构建 $ docker-compose up -d # 创建并且</description>
    </item>
    
    <item>
      <title>PHP 基础知识</title>
      <link>https://zsmhub.github.io/post/php/php%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</link>
      <pubDate>Tue, 01 Jan 2019 10:37:43 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/php/php%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</guid>
      <description>PHP手册 点击跳转 查找 php.ini 路径 1 php -i | grep php.ini 操作符 两个相连的冒号: 范围解析操作符:: 执行操作符` getenv 获取一个系统环境变量的值 php设置错误信息输出</description>
    </item>
    
  </channel>
</rss>
