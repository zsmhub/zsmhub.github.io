<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>database on ZsmHub - Blog</title>
    <link>https://zsmhub.github.io/categories/database/</link>
    <description>Recent content in database on ZsmHub - Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>ZsmHub</copyright>
    <lastBuildDate>Mon, 10 May 2021 09:38:42 +0800</lastBuildDate><atom:link href="https://zsmhub.github.io/categories/database/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>行存储模式和列存储模式</title>
      <link>https://zsmhub.github.io/post/database/%E8%A1%8C%E5%AD%98%E5%82%A8%E6%A8%A1%E5%BC%8F%E5%92%8C%E5%88%97%E5%AD%98%E5%82%A8%E6%A8%A1%E5%BC%8F/</link>
      <pubDate>Mon, 10 May 2021 09:38:42 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/database/%E8%A1%8C%E5%AD%98%E5%82%A8%E6%A8%A1%E5%BC%8F%E5%92%8C%E5%88%97%E5%AD%98%E5%82%A8%E6%A8%A1%E5%BC%8F/</guid>
      <description>行存储和列存储，是数据库底层组织数据的方式。（和文档型、K-V 型，时序型等概念不在一个层次） 行存储 行存储系统以行的方式来组织数据。 1 2 3 4 5</description>
    </item>
    
    <item>
      <title>阿里云MySQL分析实例</title>
      <link>https://zsmhub.github.io/post/database/%E9%98%BF%E9%87%8C%E4%BA%91mysql%E5%88%86%E6%9E%90%E5%AE%9E%E4%BE%8B/</link>
      <pubDate>Mon, 29 Mar 2021 09:10:10 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/database/%E9%98%BF%E9%87%8C%E4%BA%91mysql%E5%88%86%E6%9E%90%E5%AE%9E%E4%BE%8B/</guid>
      <description>MySQL分析实例是 AnaylticDB MySQL (简称ADB)的一种标准适用场景，它可实现对MySQL的分析加速。针对RDS MySQL用户的复杂分析查询卡顿或者响应</description>
    </item>
    
    <item>
      <title>OLTP和OLAP</title>
      <link>https://zsmhub.github.io/post/database/oltp%E5%92%8Colap/</link>
      <pubDate>Sat, 10 Oct 2020 09:13:08 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/database/oltp%E5%92%8Colap/</guid>
      <description>根据数据库处理的业务数据量，以及处理数据的不同方式，人们把数据库分为 OLTP 和 OLAP 两大类型。 OLTP vs OLAP 常见的 Oracle、MySQL 等数据库都属于 OLTP 类型</description>
    </item>
    
    <item>
      <title>Canal</title>
      <link>https://zsmhub.github.io/post/database/canal/</link>
      <pubDate>Mon, 10 Aug 2020 11:19:13 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/database/canal/</guid>
      <description>canal 简介 canal github canal 是阿里开发的一款基于数据库增量日志解析，提供增量数据订阅与消费的框架，可以很方便地同步数据库的增量数据到其他的存储应用。 整个框架</description>
    </item>
    
    <item>
      <title>大数据表设计-TableStore</title>
      <link>https://zsmhub.github.io/post/database/tablestore/</link>
      <pubDate>Sun, 02 Aug 2020 10:13:11 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/database/tablestore/</guid>
      <description>简介 表格存储（Tablestore）是阿里云自研的NoSQL多模型数据库，提供海量结构化数据存储以及快速的查询和分析服务。表格存储的分布式存</description>
    </item>
    
    <item>
      <title>Mysql 和 MariaDB</title>
      <link>https://zsmhub.github.io/post/database/mysql%E5%92%8Cmariadb/</link>
      <pubDate>Mon, 27 Jul 2020 15:13:43 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/database/mysql%E5%92%8Cmariadb/</guid>
      <description>Mysql 和 MariaDB 的关系 MariaDB 数据库管理系统是 MySQL 的一个分支，主要由开源社区在维护，采用GPL授权许可。 开发这个分支的原因之一是：甲骨文公司收购了 MySQL 后，有将 MySQL</description>
    </item>
    
    <item>
      <title>Mysql高级知识</title>
      <link>https://zsmhub.github.io/post/database/mysql%E9%AB%98%E7%BA%A7%E7%9F%A5%E8%AF%86/</link>
      <pubDate>Sun, 12 Jul 2020 13:51:13 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/database/mysql%E9%AB%98%E7%BA%A7%E7%9F%A5%E8%AF%86/</guid>
      <description>MySQL 架构 连接层：最上层是一些客户端和连接服务。主要完成一些类似于连接处理、授权认证、及相关的安全方案。在该层上引入了线程池的概念，为通过认证安</description>
    </item>
    
    <item>
      <title>缓存之雪崩、击穿、穿透</title>
      <link>https://zsmhub.github.io/post/database/%E7%BC%93%E5%AD%98%E4%B9%8B%E9%9B%AA%E5%B4%A9-%E5%87%BB%E7%A9%BF-%E7%A9%BF%E9%80%8F/</link>
      <pubDate>Sun, 31 May 2020 16:22:36 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/database/%E7%BC%93%E5%AD%98%E4%B9%8B%E9%9B%AA%E5%B4%A9-%E5%87%BB%E7%A9%BF-%E7%A9%BF%E9%80%8F/</guid>
      <description>缓存雪崩 缓存雪崩是指在我们设置缓存时采用了相同的过期时间，导致缓存在某一时刻同时失效，请求全部转发到 DB，DB 瞬时压力过重导致雪崩。 解决方案</description>
    </item>
    
    <item>
      <title>Mysql 经典案例</title>
      <link>https://zsmhub.github.io/post/database/mysql%E7%BB%8F%E5%85%B8%E6%A1%88%E4%BE%8B/</link>
      <pubDate>Fri, 29 May 2020 19:13:07 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/database/mysql%E7%BB%8F%E5%85%B8%E6%A1%88%E4%BE%8B/</guid>
      <description>too many connection 报错可能原因 机器负载飙升，导致SQL执行效率下降，导致连接堆积 业务访问量突增（或者有SQL注入现象），导致连接数打满 出现“死锁”或者锁</description>
    </item>
    
    <item>
      <title>Mysql 主从复制延时案例</title>
      <link>https://zsmhub.github.io/post/database/mysql%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6%E5%BB%B6%E6%97%B6%E8%A7%A3%E5%86%B3%E6%A1%88%E4%BE%8B/</link>
      <pubDate>Thu, 07 May 2020 09:34:49 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/database/mysql%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6%E5%BB%B6%E6%97%B6%E8%A7%A3%E5%86%B3%E6%A1%88%E4%BE%8B/</guid>
      <description>MySQL 主从复制的延时一直是业界困扰已久的问题。延时的出现会降低主从读写分离的价值，不利于数据实时性较高的业务使用 MySQL。 如果主从复制之间出现</description>
    </item>
    
    <item>
      <title>Mysql 基础知识二</title>
      <link>https://zsmhub.github.io/post/database/mysql%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E4%BA%8C/</link>
      <pubDate>Fri, 03 Apr 2020 22:45:33 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/database/mysql%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E4%BA%8C/</guid>
      <description>一、基础知识 表存储引擎必须用InnoDB 字符集必须使用utf8mb4 （utf8不是真utf8） 禁止使用存储过程、视图、触发器、Event 命名</description>
    </item>
    
    <item>
      <title>Mysql 事务和锁</title>
      <link>https://zsmhub.github.io/post/database/mysql%E4%BA%8B%E5%8A%A1%E5%92%8C%E9%94%81/</link>
      <pubDate>Sun, 01 Sep 2019 17:12:23 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/database/mysql%E4%BA%8B%E5%8A%A1%E5%92%8C%E9%94%81/</guid>
      <description>事务是必须满足4个条件（ACID） A (Atomicity) 原子性：整个事务中的所有操作，要么全部完成，要么全部不完成，不可能停滞在中间某个环节。事务在执行过程中</description>
    </item>
    
    <item>
      <title>NoSQL 简单了解</title>
      <link>https://zsmhub.github.io/post/database/nosql%E7%AE%80%E5%8D%95%E4%BA%86%E8%A7%A3/</link>
      <pubDate>Sat, 29 Jun 2019 20:02:31 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/database/nosql%E7%AE%80%E5%8D%95%E4%BA%86%E8%A7%A3/</guid>
      <description>NoSQL 数据库与传统的关系型数据库相比，它具有操作简单、完全免费、源码公开、随时下载等特点，并可以用于各种商业目的。 这使 NoSQL 产品广泛应用于各种大型门</description>
    </item>
    
    <item>
      <title>Mysql 优化</title>
      <link>https://zsmhub.github.io/post/database/mysql%E4%BC%98%E5%8C%96/</link>
      <pubDate>Sat, 01 Jun 2019 16:54:37 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/database/mysql%E4%BC%98%E5%8C%96/</guid>
      <description>慢查询优化 根据 where 条件，组建联合索引『每一次查询只能用上一个索引，所以需要好好利用联合索引』 使用强制索引，使用 explain 分析查询 sql 时，需要关注 key、</description>
    </item>
    
    <item>
      <title>SQL Server 基础知识</title>
      <link>https://zsmhub.github.io/post/database/sqlserver%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</link>
      <pubDate>Thu, 28 Mar 2019 20:19:28 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/database/sqlserver%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</guid>
      <description>SQL Server SQL Server 是由微软公司（Microsoft）开发的关系型数据库（RDBMS）。 SQL Server 主要是和 MySQL 和 Oracle 二者竞争。 系统数据库（System Databa</description>
    </item>
    
    <item>
      <title>Mysql 基础知识一</title>
      <link>https://zsmhub.github.io/post/database/mysql%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E4%B8%80/</link>
      <pubDate>Wed, 09 Jan 2019 22:13:42 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/database/mysql%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E4%B8%80/</guid>
      <description>常用函数 数据库表的时间戳字段设计，建议使用 int64 类型 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 # 日期 date_format(&amp;#39;2019-12-12 12:22:33&amp;#39;, &amp;#34;%Y-%m-%d&amp;#34;) -- 日期格式化</description>
    </item>
    
    <item>
      <title>Memcached</title>
      <link>https://zsmhub.github.io/post/database/memcached/</link>
      <pubDate>Fri, 04 Jan 2019 22:43:26 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/database/memcached/</guid>
      <description>Memcached 是一个自由开源的，高性能，分布式内存对象缓存系统。 Memcached 是一种基于内存的 key-value 存储，用来存储小块的任意数据（字符串、对象）。 Memcached 官方网站：http:</description>
    </item>
    
    <item>
      <title>Redis</title>
      <link>https://zsmhub.github.io/post/database/redis/</link>
      <pubDate>Thu, 03 Jan 2019 22:38:49 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/database/redis/</guid>
      <description>缓存分类 众所周知，不同的缓存速度是不同的，本地内存缓存 &amp;gt; redis/memcache &amp;gt; 磁盘缓存。 PHP 可以使用静态变量（如 array）实现本地内存缓存，Golang 可以使</description>
    </item>
    
  </channel>
</rss>
