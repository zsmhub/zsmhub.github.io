<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>database on ZsmHub - Blog</title>
    <link>https://zsmhub.github.io/categories/database/</link>
    <description>Recent content in database on ZsmHub - Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>ZsmHub</copyright>
    <lastBuildDate>Thu, 07 May 2020 09:34:49 +0800</lastBuildDate>
    
	<atom:link href="https://zsmhub.github.io/categories/database/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Mysql 主从复制延时案例</title>
      <link>https://zsmhub.github.io/post/database/mysql%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6%E5%BB%B6%E6%97%B6%E8%A7%A3%E5%86%B3%E6%A1%88%E4%BE%8B/</link>
      <pubDate>Thu, 07 May 2020 09:34:49 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/database/mysql%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6%E5%BB%B6%E6%97%B6%E8%A7%A3%E5%86%B3%E6%A1%88%E4%BE%8B/</guid>
      <description>MySQL主从复制的延时一直是业界困扰已久的问题。延时的出现会降低主从读写分离的价值，不利于数据实时性较高的业务使用MySQL。 如果主从复制</description>
    </item>
    
    <item>
      <title>大数据表设计方案</title>
      <link>https://zsmhub.github.io/post/database/%E5%A4%A7%E6%95%B0%E6%8D%AE%E8%A1%A8%E8%AE%BE%E8%AE%A1%E6%96%B9%E6%A1%88/</link>
      <pubDate>Sat, 25 Apr 2020 23:06:53 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/database/%E5%A4%A7%E6%95%B0%E6%8D%AE%E8%A1%A8%E8%AE%BE%E8%AE%A1%E6%96%B9%E6%A1%88/</guid>
      <description>方案 当数据总量或者并发数很大的时候，我们通常选择NoSQL存储产品来存储数据，但常见的NoSQL产品都没有提供自增列的功能，因此通常要借助外</description>
    </item>
    
    <item>
      <title>数据库基础知识</title>
      <link>https://zsmhub.github.io/post/database/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</link>
      <pubDate>Fri, 03 Apr 2020 22:45:33 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/database/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</guid>
      <description>一、基础知识 表存储引擎必须用InnoDB 字符集必须使用utf8mb4 （utf8不是真utf8） 禁止使用存储过程、视图、触发器、Event 命名</description>
    </item>
    
    <item>
      <title>Memcached</title>
      <link>https://zsmhub.github.io/post/database/memcached/</link>
      <pubDate>Fri, 04 Jan 2019 22:43:26 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/database/memcached/</guid>
      <description>基础信息 telnet memcached 11211 // 连接memcached服务器 flush_all // 清除全部缓存 delete key // 清除某个key的缓存 注意 memcached在存储数组时，PHP的memca</description>
    </item>
    
    <item>
      <title>Redis</title>
      <link>https://zsmhub.github.io/post/database/redis/</link>
      <pubDate>Thu, 03 Jan 2019 22:38:49 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/database/redis/</guid>
      <description>基础信息 Redis是一个基于内存的高效的非关系型数据库，占用端口：6379 配置文件路径：/usr/local/etc/redis.conf r</description>
    </item>
    
  </channel>
</rss>