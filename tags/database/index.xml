<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>database on ZsmHub - Blog</title>
    <link>https://zsmhub.github.io/tags/database/</link>
    <description>Recent content in database on ZsmHub - Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>ZsmHub</copyright>
    <lastBuildDate>Mon, 29 Mar 2021 09:10:10 +0800</lastBuildDate><atom:link href="https://zsmhub.github.io/tags/database/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>阿里云MySQL分析实例</title>
      <link>https://zsmhub.github.io/post/database/%E9%98%BF%E9%87%8C%E4%BA%91mysql%E5%88%86%E6%9E%90%E5%AE%9E%E4%BE%8B/</link>
      <pubDate>Mon, 29 Mar 2021 09:10:10 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/database/%E9%98%BF%E9%87%8C%E4%BA%91mysql%E5%88%86%E6%9E%90%E5%AE%9E%E4%BE%8B/</guid>
      <description>MySQL分析实例是AnaylticDB MySQL的一种标准适用场景，它可实现对MySQL的分析加速。针对RDS MySQL用户的复杂分析查询</description>
    </item>
    
    <item>
      <title>OLTP和OLAP</title>
      <link>https://zsmhub.github.io/post/database/oltp%E5%92%8Colap/</link>
      <pubDate>Sat, 10 Oct 2020 09:13:08 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/database/oltp%E5%92%8Colap/</guid>
      <description>根据数据库处理的业务数据量，以及处理数据的不同方式，人们把数据库分为 OLTP 和 OLAP 两大类型。 OLTP vs OLAP 常见的 Oracle、MySQL 等数据库都属于 OLTP 类型</description>
    </item>
    
    <item>
      <title>Mysql高级知识</title>
      <link>https://zsmhub.github.io/post/database/mysql%E9%AB%98%E7%BA%A7%E7%9F%A5%E8%AF%86/</link>
      <pubDate>Sun, 12 Jul 2020 13:51:13 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/database/mysql%E9%AB%98%E7%BA%A7%E7%9F%A5%E8%AF%86/</guid>
      <description>MySQL 架构 连接层：最上层是一些客户端和连接服务。主要完成一些类似于连接处理、授权认证、及相关的安全方案。在该层上引入了线程池的概念，为通过认证安</description>
    </item>
    
    <item>
      <title>缓存之雪崩、击穿、穿透</title>
      <link>https://zsmhub.github.io/post/database/%E7%BC%93%E5%AD%98%E4%B9%8B%E9%9B%AA%E5%B4%A9-%E5%87%BB%E7%A9%BF-%E7%A9%BF%E9%80%8F/</link>
      <pubDate>Sun, 31 May 2020 16:22:36 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/database/%E7%BC%93%E5%AD%98%E4%B9%8B%E9%9B%AA%E5%B4%A9-%E5%87%BB%E7%A9%BF-%E7%A9%BF%E9%80%8F/</guid>
      <description>缓存雪崩 缓存雪崩是指在我们设置缓存时采用了相同的过期时间，导致缓存在某一时刻同时失效，请求全部转发到 DB，DB 瞬时压力过重导致雪崩。 解决方案</description>
    </item>
    
    <item>
      <title>Mysql 经典案例</title>
      <link>https://zsmhub.github.io/post/database/mysql%E7%BB%8F%E5%85%B8%E6%A1%88%E4%BE%8B/</link>
      <pubDate>Fri, 29 May 2020 19:13:07 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/database/mysql%E7%BB%8F%E5%85%B8%E6%A1%88%E4%BE%8B/</guid>
      <description>too many connection 报错可能原因 机器负载飙升，导致SQL执行效率下降，导致连接堆积 业务访问量突增（或者有SQL注入现象），导致连接数打满 出现“死锁”或者锁</description>
    </item>
    
    <item>
      <title>Mysql 基础知识二</title>
      <link>https://zsmhub.github.io/post/database/mysql%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E4%BA%8C/</link>
      <pubDate>Fri, 03 Apr 2020 22:45:33 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/database/mysql%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E4%BA%8C/</guid>
      <description>一、基础知识 表存储引擎必须用InnoDB 字符集必须使用utf8mb4 （utf8不是真utf8） 禁止使用存储过程、视图、触发器、Event 命名</description>
    </item>
    
    <item>
      <title>Mysql 事务和锁</title>
      <link>https://zsmhub.github.io/post/database/mysql%E4%BA%8B%E5%8A%A1%E5%92%8C%E9%94%81/</link>
      <pubDate>Sun, 01 Sep 2019 17:12:23 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/database/mysql%E4%BA%8B%E5%8A%A1%E5%92%8C%E9%94%81/</guid>
      <description>事务是必须满足4个条件（ACID） A (Atomicity) 原子性：整个事务中的所有操作，要么全部完成，要么全部不完成，不可能停滞在中间某个环节。事务在执行过程中</description>
    </item>
    
    <item>
      <title>Mysql 优化</title>
      <link>https://zsmhub.github.io/post/database/mysql%E4%BC%98%E5%8C%96/</link>
      <pubDate>Sat, 01 Jun 2019 16:54:37 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/database/mysql%E4%BC%98%E5%8C%96/</guid>
      <description>慢查询优化 根据 where 条件，组建联合索引『每一次查询只能用上一个索引，所以需要好好利用联合索引』 使用强制索引，使用 explain 分析查询 sql 时，需要关注 key、</description>
    </item>
    
    <item>
      <title>Mysql 基础知识一</title>
      <link>https://zsmhub.github.io/post/database/mysql%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E4%B8%80/</link>
      <pubDate>Wed, 09 Jan 2019 22:13:42 +0800</pubDate>
      
      <guid>https://zsmhub.github.io/post/database/mysql%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E4%B8%80/</guid>
      <description>常用函数 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 date_format(&amp;#39;2019-12-12 12:22:33&amp;#39;, format) -- 日期格式化 FROM_UNIXTIME(&amp;#39;时间戳&amp;#39;,&amp;#39;%</description>
    </item>
    
  </channel>
</rss>
