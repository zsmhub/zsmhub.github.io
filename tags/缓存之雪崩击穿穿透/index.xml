<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>缓存之雪崩、击穿、穿透 on ZsmHub - Blog</title>
    <link>https://zsmhub.github.io/tags/%E7%BC%93%E5%AD%98%E4%B9%8B%E9%9B%AA%E5%B4%A9%E5%87%BB%E7%A9%BF%E7%A9%BF%E9%80%8F/</link>
    <description>Recent content in 缓存之雪崩、击穿、穿透 on ZsmHub - Blog</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>ZsmHub</copyright>
    <lastBuildDate>Sun, 31 May 2020 16:22:36 +0800</lastBuildDate>
    <atom:link href="https://zsmhub.github.io/tags/%E7%BC%93%E5%AD%98%E4%B9%8B%E9%9B%AA%E5%B4%A9%E5%87%BB%E7%A9%BF%E7%A9%BF%E9%80%8F/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>缓存之雪崩、击穿、穿透</title>
      <link>https://zsmhub.github.io/post/database/%E7%BC%93%E5%AD%98%E4%B9%8B%E9%9B%AA%E5%B4%A9-%E5%87%BB%E7%A9%BF-%E7%A9%BF%E9%80%8F/</link>
      <pubDate>Sun, 31 May 2020 16:22:36 +0800</pubDate>
      <guid>https://zsmhub.github.io/post/database/%E7%BC%93%E5%AD%98%E4%B9%8B%E9%9B%AA%E5%B4%A9-%E5%87%BB%E7%A9%BF-%E7%A9%BF%E9%80%8F/</guid>
      <description>&lt;h2 id=&#34;缓存雪崩&#34;&gt;缓存雪崩&lt;/h2&gt;&#xA;&lt;p&gt;缓存雪崩是指在我们设置缓存时采用了相同的过期时间，导致缓存在某一时刻同时失效，请求全部转发到 DB，DB 瞬时压力过重导致雪崩。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;解决方案&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;缓存失效时的雪崩效应对底层系统的冲击非常可怕。大多数系统设计者考虑用加锁或者队列的方式保证缓存的单线程（进程）写，从而避免失效时大量的并发请求落到底层存储系统上。这里分享一个简单方案，就是将缓存失效时间分散开，比如我们可以在原有的失效时间基础上增加一个随机值，比如1-5分钟随机，这样每一个缓存的过期时间的重复率就会降低，就很难引发集体失效的事件。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
